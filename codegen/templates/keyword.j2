{{license}}
"""Module providing the {{keyword_data.classname}} class."""
{% if keyword_data.dataclasses %}
import dataclasses
{% endif %}
import typing
{# TODO - only do this if there's a keyword without a default #}
{% if keyword_data.mixin_imports %}
{% for mixin_import in keyword_data.mixin_imports %}
from ansys.dyna.core.lib.cards_.special.{{mixin_import.source}} import{% for name in mixin_import.names %}{{ ", " if not loop.first else " " }}{{name}}{% endfor %}
{% endfor %}

{% endif %}
from ansys.dyna.core.lib.card import Card, Field, Flag
{% if keyword_data.duplicate %}
from ansys.dyna.core.lib.table_card import TableCard
{% endif %}
{% if keyword_data.card_sets %}
from ansys.dyna.core.lib.card_set import CardSet
from ansys.dyna.core.lib.cards import Cards
{% endif %}
{% if keyword_data.duplicate_group %}
from ansys.dyna.core.lib.table_card_group import TableCardGroup
{% endif %}
{% if keyword_data.variable %}
from ansys.dyna.core.lib.series_card import SeriesCard
{% endif %}
{% if keyword_data.options %}
from ansys.dyna.core.lib.option_card import OptionCardSet, OptionSpec
{% elif keyword_data.card_sets %}
{% if keyword_data.card_sets.options %}
from ansys.dyna.core.lib.option_card import OptionCardSet, OptionSpec
{% endif %}
{% endif %}
from ansys.dyna.core.lib.keyword_base import KeywordBase
{% for link in keyword_data.links %}
from ansys.dyna.core.keywords.keyword_classes.auto.{{link.modulename}} import {{link.classname}}
{% endfor %}

{% if keyword_data.card_sets %}
{% for card_set in keyword_data.card_sets.sets %}
class {{card_set.name}}(Cards):
    """{{card_set.title}} CardSet."""
{% if card_set.options %}

    option_specs = [
{% for option in card_set.options %}
        OptionSpec("{{option.name}}", {{option.card_order}}, {{option.title_order}}),
{% endfor %}
    ]
{% endif %}

    def __init__(self, **kwargs):
        """Initialize the {{card_set.name}} CardSet."""
        super().__init__(kwargs["keyword"])
        self._parent = kwargs["parent"]
        kwargs["parent"] = self
        self._cards = [
{% for card in card_set.source_cards %}
{% with parent_name = card_set.name %}
{% include 'keyword/card.j2' %}
{% endwith %}
{% endfor %}
{% if card_set.options %}
{% with parent_name = card_set.name %}
{% with options = card_set.options %}
{% include 'keyword/options.j2' %}
{% endwith %}
{% endwith %}
{% endif %}{# card_set.options #}
        ]

{% for card in card_set.source_cards %}
{% include 'keyword/card_properties.j2' %}
{% endfor %}{# card in card_set.source_cards #}
{% if card_set.options %}
{% for option in card_set.options %}
{% include 'keyword/option_card_properties.j2' %}
{% endfor %}{# option in card_set.options #}
{% endif %}{# card_set.options #}
    @property
    def parent(self) -> KeywordBase:
        """Get the parent keyword."""
        return self._parent


{% endfor %}{# card_set in keyword_data.card_sets.sets #}
{% endif %}{# keyword_data.card_sets #}
{% if keyword_data.mixins %}
class {{keyword_data.classname}}(
    KeywordBase
    {% if keyword_data.mixins %}
{% for mixin in keyword_data.mixins %}
    , {{mixin}}
{% endfor %}
    {% endif %}
    ):
{% else %}
class {{keyword_data.classname}}(KeywordBase):
{% endif %}
    """DYNA {{keyword_data.title}} keyword"""

    keyword = "{{keyword_data.keyword}}"
    subkeyword = "{{keyword_data.subkeyword}}"
{% if keyword_data.options %}
    option_specs = [
{% for option in keyword_data.options %}
        OptionSpec("{{option.name}}", {{option.card_order}}, {{option.title_order}}),
{% endfor %}
    ]
{% endif %}
{% for dataclass in keyword_data.dataclasses %}

    @dataclasses.dataclass
    class {{ dataclass.name }}:
        """Dataclass for {{ dataclass.name }}."""
{% for field in dataclass.fields %}
        {{ field.name }}: {{field.type}} = None
{% endfor %}
{% endfor %}

    def __init__(self, **kwargs):
        """Initialize the {{keyword_data.classname}} class."""
        super().__init__(**kwargs)
{% if keyword_data.card_sets %}
        kwargs["parent"] = self
        kwargs["keyword"] = self
{% endif %}
{% if keyword_data.options %}
        kwargs["parent"] = self
{% endif %}
        self._cards = [
{% for card in keyword_data.cards %}
{% include 'keyword/card.j2' %}
{% endfor %}
{% if keyword_data.options %}
{% with parent_name = keyword_data.classname %}
{% with options = keyword_data.options %}
{% include 'keyword/options.j2' %}
{% endwith %}
{% endwith %}
{% endif %}{# keyword_data.options #}
        ]

{% for card in keyword_data.cards %}
{% include 'keyword/card_properties.j2' %}
{% endfor %}
{% if keyword_data.options %}
{% for option in keyword_data.options %}
{% include 'keyword/option_card_properties.j2' %}
{% endfor %}{# option in keyword_data.options #}
{% endif %}{# keyword_data.options #}
{% with links = keyword_data.links %}
{% include 'keyword/links.j2' %}
{% endwith %}
{% include 'keyword/alias.j2' %}
