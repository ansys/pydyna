# Copyright (C) 2023 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# %% [markdown]
# # Data Definitions for LS-DYNA Electromagnetic Examples
#
# This file provides node sets and segment definitions for use in various LS-DYNA electromagnetic (EM)
# simulation examples. The data is organized for clarity and reusability, supporting workflows such as
# resistive heating, RLC circuit, and railgun simulations. Each section describes the purpose and
# structure of the data, enabling users to quickly identify and apply the correct sets for their
# simulation needs.
#
# ---

# %% [markdown]
# ### 1. Node Sets for Resistive Heating
# These node sets are used to define temperature boundary conditions and regions of interest in resistive
# heating simulations. They are referenced in examples such as `em_resistive_heating.py` and related
# notebooks.
#
# - Each list contains node IDs for a specific boundary or region.
# - Used for applying temperature, voltage, or current boundary conditions.
# %%
resistive_heating_tmp = [
    4507,
    4508,
    4505,
    4506,
    4547,
    4548,
    4545,
    4546,
    4558,
    4557,
    4563,
    4568,
    4578,
    4577,
    4587,
    4588,
    4597,
    4598,
    4608,
    4607,
    4617,
    4618,
    4627,
    4628,
    4647,
    4648,
    4657,
    4658,
    4677,
    4678,
    4687,
    4688,
    4707,
    4708,
    4738,
    4737,
    4748,
    4747,
    4758,
    4757,
    4768,
    4767,
    4808,
    4818,
    4823,
    4828,
    4858,
    4863,
    4868,
    4873,
    4898,
    4908,
    4913,
    4918,
    4948,
    4953,
    4958,
    4963,
    4988,
    4998,
    5003,
    5008,
    5038,
    5043,
    5048,
    5053,
    5088,
    5087,
    5098,
    5097,
    5103,
    5108,
    5118,
    5117,
    5123,
    5128,
    5138,
    5137,
    6367,
    6366,
    6365,
    6364,
    6407,
    6406,
    6405,
    6404,
    6417,
    6416,
    6422,
    6427,
    6437,
    6436,
    6447,
    6446,
    6457,
    6456,
    6467,
    6466,
    6477,
    6476,
    6487,
    6486,
    6507,
    6506,
    6517,
    6516,
    6537,
    6536,
    6547,
    6546,
    6567,
    6566,
    6597,
    6596,
    6607,
    6606,
    6617,
    6616,
    6627,
    6626,
    6667,
    6677,
    6682,
    6687,
    6717,
    6722,
    6727,
    6732,
    6757,
    6767,
    6772,
    6777,
    6807,
    6812,
    6817,
    6822,
    6847,
    6857,
    6862,
    6867,
    6897,
    6902,
    6907,
    6912,
    6947,
    6946,
    6957,
    6956,
    6962,
    6967,
    6977,
    6976,
    6982,
    6987,
    6997,
    6996,
    7832,
    7831,
    7834,
    7833,
    7836,
    7835,
    7838,
    7837,
    7840,
    7839,
    7842,
    7841,
    7844,
    7843,
    7846,
    7845,
    7848,
    7847,
    7850,
    7849,
    7852,
    7851,
    7854,
    7853,
    7856,
    7855,
    7858,
    7857,
    7860,
    7859,
    7862,
    7861,
    7864,
    7863,
    7866,
    7865,
    7868,
    7867,
    7870,
    7869,
    7872,
    7871,
    7874,
    7873,
    7876,
    7875,
    7878,
    7877,
    7880,
    7879,
    7882,
    7881,
    7884,
    7883,
    7886,
    7885,
    7888,
    7887,
    7890,
    7889,
    7892,
    7891,
    7894,
    7893,
    7896,
    7895,
    7898,
    7897,
    7900,
    7899,
    7902,
    7901,
    7904,
    7903,
    7906,
    7905,
    7908,
    7907,
    7910,
    7909,
    7912,
    7911,
    7914,
    7913,
    7916,
    7915,
    7918,
    7917,
    7920,
    7919,
    7922,
    7921,
    7924,
    7923,
    7926,
    7925,
    7928,
    7927,
    7930,
    7929,
    7932,
    7931,
    7934,
    7933,
    7936,
    7935,
    7938,
    7937,
    7940,
    7939,
    7942,
    7941,
    7944,
    7943,
    7946,
    7945,
    7948,
    7947,
    7950,
    7949,
    7952,
    7951,
    7954,
    7953,
    7956,
    7955,
    7958,
    7957,
    7960,
    7959,
    7962,
    7961,
    7964,
    7963,
    7966,
    7965,
    7968,
    7967,
    7970,
    7969,
    7972,
    7971,
    7974,
    7973,
    7976,
    7975,
    7978,
    7977,
    7980,
    7979,
    7982,
    7981,
    7984,
    7983,
    7986,
    7985,
    7988,
    7987,
    7990,
    7989,
    7992,
    7991,
    7994,
    7993,
    7996,
    7995,
    7998,
    7997,
    8000,
    7999,
    8002,
    8001,
    8004,
    8003,
    8006,
    8005,
    8008,
    8007,
    8010,
    8009,
    8012,
    8011,
    8014,
    8013,
    8016,
    8015,
    8018,
    8017,
    8020,
    8019,
    12152,
    12151,
    12154,
    12153,
    12156,
    12155,
    12158,
    12157,
    12160,
    12159,
    12162,
    12161,
    12164,
    12163,
    12166,
    12165,
    12168,
    12167,
    12170,
    12169,
    12172,
    12171,
    12174,
    12173,
    12176,
    12175,
    12178,
    12177,
    12180,
    12179,
    12182,
    12181,
    12184,
    12183,
    12186,
    12185,
    12188,
    12187,
    12190,
    12189,
    12192,
    12191,
    12194,
    12193,
    12196,
    12195,
    12198,
    12197,
    12200,
    12199,
    12202,
    12201,
    12204,
    12203,
    12206,
    12205,
    12208,
    12207,
    12210,
    12209,
    12212,
    12211,
    12214,
    12213,
    12216,
    12215,
    12218,
    12217,
    12220,
    12219,
    12222,
    12221,
    12224,
    12223,
    12226,
    12225,
    12228,
    12227,
    12230,
    12229,
    12232,
    12231,
    12234,
    12233,
    12236,
    12235,
    12238,
    12237,
    12240,
    12239,
    12242,
    12241,
    12244,
    12243,
    12246,
    12245,
    12248,
    12247,
    12250,
    12249,
    12252,
    12251,
    12254,
    12253,
    12256,
    12255,
    12258,
    12257,
    12260,
    12259,
    12262,
    12261,
    12264,
    12263,
    12266,
    12265,
    12268,
    12267,
    12270,
    12269,
    12272,
    12271,
    12274,
    12273,
    12276,
    12275,
    12278,
    12277,
    12280,
    12279,
    12282,
    12281,
    12284,
    12283,
    12286,
    12285,
    12288,
    12287,
    12290,
    12289,
    12292,
    12291,
    12294,
    12293,
    12296,
    12295,
    12298,
    12297,
    12300,
    12299,
    12302,
    12301,
    12304,
    12303,
    12306,
    12305,
    12308,
    12307,
    12310,
    12309,
    12312,
    12311,
    12314,
    12313,
    12316,
    12315,
    12318,
    12317,
    12320,
    12319,
    12322,
    12321,
    12324,
    12323,
    12326,
    12325,
    12328,
    12327,
    12330,
    12329,
    12332,
    12331,
    12334,
    12333,
    12336,
    12335,
    12338,
    12337,
    12340,
    12339,
    12439,
    12440,
    12441,
    12442,
    12443,
    12444,
    12445,
    12446,
    12447,
    12448,
    12449,
    12450,
    12451,
    12452,
    12453,
    12454,
    12455,
    12456,
    12457,
    12458,
    12459,
    12460,
    12461,
    12462,
    12463,
    12464,
    12465,
    12466,
    12467,
    12468,
    12469,
    12470,
    12471,
    12472,
    12473,
    12474,
    12475,
    12476,
    12477,
    12478,
    12479,
    12480,
    12481,
    12482,
    12483,
    12484,
    12485,
    12486,
    12487,
    12488,
    12489,
    12490,
    12491,
    12492,
    12493,
    12494,
    12495,
    12496,
    12497,
    12498,
    12499,
    12500,
    12501,
    12502,
    12503,
    12504,
    12505,
    12506,
    12507,
    12508,
    12509,
    12510,
    12511,
    12512,
    12513,
    12514,
    12515,
    12516,
    12517,
    12518,
    12519,
    12520,
    12521,
    12522,
    12523,
    12524,
    12525,
    12526,
    12527,
    12528,
    12529,
    12530,
    12531,
    12532,
    12533,
    13303,
    13304,
    13305,
    13306,
    13307,
    13308,
    13309,
    13310,
    13311,
    13312,
    13313,
    13314,
    13315,
    13316,
    13317,
    13318,
    13319,
    13320,
    13321,
    13322,
    13323,
    13324,
    13325,
    13326,
    13327,
    13328,
    13329,
    13330,
    13331,
    13332,
    13333,
    13334,
    13335,
    13336,
    13337,
    13338,
    13339,
    13340,
    13341,
    13342,
    13343,
    13344,
    13345,
    13346,
    13347,
    13348,
    13349,
    13350,
    13351,
    13352,
    13353,
    13354,
    13355,
    13356,
    13357,
    13358,
    13359,
    13360,
    13361,
    13362,
    13363,
    13364,
    13365,
    13366,
    13367,
    13368,
    13369,
    13370,
    13371,
    13372,
    13373,
    13374,
    13375,
    13376,
    13377,
    13378,
    13379,
    13380,
    13381,
    13382,
    13383,
    13384,
    13385,
    13386,
    13387,
    13388,
    13389,
    13390,
    13391,
    13392,
    13393,
    13394,
    13395,
    13396,
    13397,
]

# %% [markdown]
# ### 2. Rogowski Coil Segment Sets
# These lists define Rogowski coil segments for current measurement in resistive heating and RLC circuit
# simulations. They are referenced in examples such as `em_resistive_heating.py`, `em_rlc_isopotential.py`,
# and related notebooks.
#
# - Each list contains segment node IDs for a specific Rogowski coil.
# - Used for defining coils for current measurement or induction.
# %%
rogoseg = [[544, 575, 575, 575], [545, 544, 544, 544], [575, 595, 595, 595], [595, 615, 615, 615]]

# %% [markdown]
# ### 3. RLC Circuit Rogowski Coil Segments
# These lists define Rogowski coil segments for RLC circuit simulation examples. They are referenced in
# `em_rlc_isopotential.py` and similar notebooks.
#
# - Each list contains segment node IDs for a specific Rogowski coil in the RLC circuit model.
# - Used for defining coils for current measurement or circuit analysis.
# %%
rlc_rogoseg = [
    [248, 252, 272, 268],
    [252, 256, 276, 272],
    [256, 260, 280, 276],
    [4, 9, 252, 248],
    [260, 264, 284, 280],
    [9, 14, 256, 252],
    [268, 272, 292, 288],
    [14, 19, 260, 256],
    [272, 276, 296, 292],
    [19, 24, 264, 260],
    [276, 280, 300, 296],
    [280, 284, 304, 300],
    [288, 292, 312, 308],
    [292, 296, 316, 312],
    [296, 300, 320, 316],
    [300, 304, 324, 320],
]

# %% [markdown]
# ### 4. Conclusion
# This file provides reusable node sets and segment definitions for LS-DYNA electromagnetic simulation
# examples. By organizing boundary conditions and coil segments in a clear, modular way, it supports
# efficient setup and extension of multiphysics workflows in research, engineering, and education.
