name: Documentation Build
description: Composite action to build and upload documentation (HTML and PDF)

inputs:
  timeout-mins:
    description: Optional timeout value for the HTML build in minutes
    required: false
  build-autokeywords-api:
    description: Enable building the autokeywords API
    required: false
    default: "True"
  pdf-pool-size:
    required: false
  pdf-string-vacancies:
    required: false
  pdf-max-strings:
    required: false
  PyDynaRunContainer:
    description: Run container name
    required: false
    default: ghcr.io/ansys/pydyna-run:latest
  python-version:
    description: Python version to use
    required: true
    default: "3.13"
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout project
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install xvfb pandoc texlive-latex-extra latexmk
      shell: bash

    - name: Install python dependencies
      run: |
        python -m pip install .[doc]
        python -m pip install docker
      shell: bash

    - name: Login to GitHub container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Licensing
      run: |
        echo "ANSYS_DPF_ACCEPT_LA=Y" >> $GITHUB_ENV
      shell: bash

    - name: Install DPF
      uses: ansys/pydpf-actions/install-dpf-server@v2.3
      with:
        dpf-standalone-TOKEN: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
        ANSYS_VERSION: "242"

    - name: LS-DYNA Keyword server activation
      run: |
        docker pull ghcr.io/ansys/ls-pre:latest
        docker run -d --name kw_server -p 50051:50051 ghcr.io/ansys/ls-pre:latest && echo "Keyword server active on port 50051."
      shell: bash

    - name: Pull PyDyna-run image
      run: |
        docker pull ghcr.io/ansys/pydyna-run:latest
      shell: bash

    - name: Build the html documentation
      env:
        ANSYSLI_SERVERS: 2325@${{ secrets.LICENSE_SERVER }}
        ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}
        LSTC_LICENSE: ansys
        PYDYNA_RUN_CONTAINER: ${{ inputs.PyDynaRunContainer }}
        BUILD_AUTOKEYWORS_API: ${{ inputs.build-autokeywords-api }}
      run: |
        if [[ -n "${{ inputs.timeout-mins }}" ]]; then
          timeout ${{ inputs.timeout-mins }}m xvfb-run make -C doc html
        else
          xvfb-run make -C doc html
        fi
      shell: bash

    - name: Upload html documentation
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: documentation-html
        path: doc/_build/html
        retention-days: 7

    - name: "Build the pdf documentation"
      run: |
        if [[ -n "${{ inputs.pdf-pool-size }}" ]]; then
          echo "pool_size=${{ inputs.pdf-pool-size }}" >> $GITHUB_ENV
        fi
        if [[ -n "${{ inputs.pdf-string-vacancies }}" ]]; then
          echo "string_vacancies=${{ inputs.pdf-string-vacancies }}" >> $GITHUB_ENV
        fi
        if [[ -n "${{ inputs.pdf-max-strings }}" ]]; then
          echo "max_strings=${{ inputs.pdf-max-strings }}" >> $GITHUB_ENV
        fi
        xvfb-run make -C doc pdf
      env:
        ANSYSLI_SERVERS: 2325@${{ secrets.LICENSE_SERVER }}
        ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}
        LSTC_LICENSE: ansys
        PYDYNA_RUN_CONTAINER: ${{ inputs.PyDynaRunContainer }}
        PYDYNA_RUN_STREAM: "0"
        extra_mem_bot: 20000000
        extra_mem_top: 30000000

    - name: Upload pdf documentation
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: documentation-pdf
        path: doc/_build/latex/*.pdf
        retention-days: 7

    - name: Extract the server logs
      if: always()
      run: |
        docker logs kw_server > server_output.txt
      shell: bash

    - name: Upload the server logs
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: server_output_docs.txt
        path: server_output.txt
