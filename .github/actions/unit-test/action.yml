name: Run Tests
description: Composite action to run tests with LS-DYNA keyword server

inputs:
  python-version:
    description: "Python version to use"
    required: true
    default: "3.13"
    type: string

  github-token:
    description: GitHub token for authentication
    required: true

  pytest-markers:
    description: Pytest markers to use (e.g., 'run', 'keywords')
    required: false
    default: ""
    type: string

  docker-image:
    description: Docker image to use for LS-DYNA keyword server
    required: false
    default: "ghcr.io/ansys/ls-pre:latest"
    type: string

  server-logs:
    description: Whether to extract server logs
    required: false
    default: "false"
    type: boolean

  license-server:
    description: License server for LS-DYNA
    required: false
    default: ""
    type: string

  codecov-token:
    description: Token for Codecov upload
    required: false
    default: ""
    type: string

  coverage-file:
    description: Coverage file path
    required: false
    default: ""
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
          persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Login to GitHub container registry
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Pull and start LS-DYNA keyword server
      if: ${{ inputs.docker-image != '' && inputs.pytest-markers != 'keywords' }}
      env:
        DOCKER_IMAGE: ${{ inputs.docker-image }}
      run: |
        python -m pip install docker
        docker pull "$DOCKER_IMAGE"
        docker run -d --name kw_server -p 50051:50051 "$DOCKER_IMAGE" && echo "Keyword server active on port 50051."
      shell: bash

    - name: Install test dependencies
      run: |
        pip install -e .[tests]
      shell: bash

    - name: Run pytest
      env:
        PYTEST_MARKERS: ${{ inputs.pytest-markers }}
        PYDYNA_RUN_CONTAINER: ${{ inputs.docker-image }}
        ANSYSLI_SERVERS: 2325@${{ inputs.license-server }}
        ANSYSLMD_LICENSE_FILE: 1055@${{ inputs.license-server }}
        LSTC_LICENSE: ansys
      run: |
        if [ "$PYTEST_MARKERS" = "" ]; then
          pytest -ra --cov=ansys.dyna.core --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term -vv
        else
          pytest -m "$PYTEST_MARKERS" -ra --cov=ansys.dyna.core --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term -vv
        fi
      shell: bash

    - name: Extract the server logs
      if: ${{ inputs.server-logs == 'true' }}
      run: |
        docker logs kw_server > server_output.txt
      shell: bash

    - name: Upload the server logs
      if: ${{ inputs.server-logs == 'true' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: server_output_tests.txt
        path: server_output.txt

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      env:
        CODECOV_TOKEN: ${{ inputs.codecov-token }}
      with:
        flags: ${{ inputs.coverage-file }}

    - name: Stop container
      if: ${{ inputs.docker-image != '' && inputs.pytest-markers != 'keywords' }}
      run: |
        docker stop kw_server
        docker rm kw_server
      shell: bash