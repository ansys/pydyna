name: Run Tests
description: Composite action to run tests with LS-DYNA keyword server

inputs:
  python-version:
    description: "Python version to use"
    required: true
    default: "3.13"
    type: string

  github-token:
    description: GitHub token for authentication
    required: true

  pytest-markers:
    description: Pytest markers to use (e.g., 'run', 'keywords')
    required: false
    default: ""
    type: string

  docker-image:
    description: Docker image to use for LS-DYNA keyword server
    required: false
    default: "ghcr.io/ansys/ls-pre:latest"
    type: string

  server-logs:
    description: Whether to extract server logs
    required: false
    default: "false"
    type: boolean

  license-server:
    description: License server for LS-DYNA
    required: false
    default: ""
    type: string

  codecov-token:
    description: Token for Codecov upload
    required: false
    default: ""
    type: string

  coverage-file:
    description: Coverage file path
    required: false
    default: ""
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Login to GitHub container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Pull and start LS-DYNA keyword server
      if: ${{ inputs.docker-image != '' && inputs.pytest-markers != 'keywords' }}
      run: |
        python -m pip install docker
        docker pull ${{ inputs.docker-image }}
        docker run -d --name kw_server -p 50051:50051 ${{ inputs.docker-image }} && echo "Keyword server active on port 50051."
      shell: bash

    - name: Install test dependencies
      run: |
        pip install -e .[tests]
      shell: bash

    - name: Run pytest
      run: |
        if [ "${{ inputs.pytest-markers }}" = "" ]; then
          export COVERAGE_FILE=.cov/${{ inputs.coverage-file }} && pytest
        else
          export COVERAGE_FILE=.cov/${{ inputs.coverage-file }} && pytest -m "${{ inputs.pytest-markers }}"
        fi
      shell: bash
      env:
        PYDYNA_RUN_CONTAINER: ${{ inputs.docker-image }}
        ANSYSLI_SERVERS: 2325@${{ inputs.license-server }}
        ANSYSLMD_LICENSE_FILE: 1055@${{ inputs.license-server }}
        LSTC_LICENSE: ansys

    - name: Extract the server logs
      if: ${{ inputs.server-logs == 'true' }}
      run: |
        docker logs kw_server > server_output.txt
      shell: bash

    - name: Upload the server logs
      if: ${{ inputs.server-logs == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: server_output_tests.txt
        path: server_output.txt

    - name: Upload coverage files
      if: ${{ !inputs.coverage-file }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.coverage-file }}-coverage
        path: .cov/${{ inputs.coverage-file }}-${{ inputs.python-version }}

    - name: Stop container
      if: ${{ inputs.docker-image != '' && inputs.pytest-markers != 'keywords' }}
      run: |
        docker stop kw_server
        docker rm kw_server
      shell: bash



    # - name: Upload coverage results
    #   if: ${{ inputs.server-logs == 'true' && !inputs.pytest-markers }}
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: coverage-html
    #     path: .cov/html
    #     retention-days: 7

    # - name: Upload coverage to Codecov
    #   if: ${{ !inputs.pytest-markers }}
    #   uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
    #   env:
    #     CODECOV_TOKEN: ${{ inputs.codecov-token }}
    #   with:
    #     files: .cov/xml