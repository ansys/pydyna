name: night doc build

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch: 
  push:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAIN_PYTHON_VERSION: '3.13'
  PACKAGE_NAME: 'ansys-dyna-core'
  PACKAGE_NAMESPACE: 'ansys.dyna.core'
  DOCUMENTATION_CNAME: "dyna.docs.pyansys.com"
  PYDYNA_RUN_CONTAINER: ${{ github.event.inputs.PyDynaRunContainer || 'ghcr.io/ansys/pydyna-run:latest'}}
  KEYWORDS: 1


jobs:

  doc:
    name: "Documentation build"
    runs-on: [public-ubuntu-latest-8-cores]
    timeout-minutes: 720
    steps:
      - name: "Checkout project"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Set up Python ${{ env.MAIN_PYTHON_VERSION }}"
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'

      - name: "Install system dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install xvfb pandoc texlive-latex-extra latexmk

      - name: "Install python dependencies"
        run: |
          python -m pip install .[doc]
          # optional dependency for `run_dyna` to work with docker.
          # TODO - consider adding to pyproject.toml under an option
          python -m pip install docker
      - name: "Login to GitHub container registry"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Licensing
        shell: bash
        run: |
          echo "ANSYS_DPF_ACCEPT_LA=Y" >> $GITHUB_ENV

      - name: Install DPF
        uses: ansys/pydpf-actions/install-dpf-server@v2.3
        with:
          dpf-standalone-TOKEN: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          ANSYS_VERSION : "242"

      - name: LS-DYNA Keyword server activation
        run: |
          docker pull ghcr.io/ansys/ls-pre:latest
          docker run -d --name kw_server -p 50051:50051 ghcr.io/ansys/ls-pre:latest && echo "Keyword server active on port 50051."

      - name: Pull PyDyna-run image
        run: |
          docker pull ghcr.io/ansys/pydyna-run:latest

      - name: "Build the html documentation"
        env:
          ANSYSLI_SERVERS: 2325@${{secrets.LICENSE_SERVER}}
          ANSYSLMD_LICENSE_FILE: 1055@${{secrets.LICENSE_SERVER}}
          LSTC_LICENSE: ansys
          PYDYNA_RUN_CONTAINER: ${{ env.PYDYNA_RUN_CONTAINER }}
          BUILD_AUTOKEYWORS_API: True
        run: |
          timeout 7200 xvfb-run make -C doc html

      - name: "Upload html documentation"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: "Download both the html and keyword class documentation"
        uses: actions/download-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: documentation-html

      - name: "Build the pdf documentation"
        env:
          ANSYSLI_SERVERS: 2325@${{secrets.LICENSE_SERVER}}
          ANSYSLMD_LICENSE_FILE: 1055@${{secrets.LICENSE_SERVER}}
          LSTC_LICENSE: ansys
          PYDYNA_RUN_CONTAINER: ${{ env.PYDYNA_RUN_CONTAINER }}
          PYDYNA_RUN_STREAM: "0"
          extra_mem_bot: 20000000
          extra_mem_top: 30000000
          pool_size: 9000000
        run: |
          xvfb-run make -C doc pdf


      - name: "Upload pdf documentation"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: documentation-pdf
          path: doc/_build/latex/*.pdf
          retention-days: 7

      - name: Extract the server logs
        if: always()
        run: |
          docker logs kw_server > server_output.txt

      - name: "Upload the server logs"
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: server_output_docs.txt
          path: server_output.txt
