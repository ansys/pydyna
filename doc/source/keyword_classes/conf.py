#import ansys.dyna.solver as solver

import datetime
import os

from ansys_sphinx_theme import get_version_match, ansys_favicon
from sphinx.builders.latex import LaTeXBuilder
from sphinx_gallery.sorting import FileNameSortKey

from ansys.dyna.core import __version__

LaTeXBuilder.supported_image_types = ["image/png", "image/pdf", "image/svg+xml"]


# Project information
project = 'ansys-dyna-core'
copyright = f"(c) {datetime.datetime.now().year} ANSYS, Inc. All rights reserved"
author = 'ANSYS Inc.'
release = version = __version__
cname = os.getenv("DOCUMENTATION_CNAME", default="dyna.docs.pyansys.com")

# Sphinx extensions
extensions = [
    'sphinx.ext.intersphinx',
    'numpydoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.inheritance_diagram',
    "sphinx_jinja",
    "sphinx_design",
    "ansys_sphinx_theme.extension.autoapi",
]

# Intersphinx mapping
intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "numpy": ("https://numpy.org/devdocs", None),
    "matplotlib": ("https://matplotlib.org/stable", None),
    "imageio": ("https://imageio.readthedocs.io/en/stable", None),
    "pandas": ("https://pandas.pydata.org/pandas-docs/stable", None),
    "pytest": ("https://docs.pytest.org/en/stable", None),
    }

# Numpydoc config
numpydoc_use_plots = True
numpydoc_show_class_members = False  # we take care of autosummary on our own
numpydoc_xref_param_type = True
numpydoc_validate = True
numpydoc_validation_checks = {
    # general
    "GL06",  # Found unknown section
    "GL07",  # Sections are in the wrong order.
    # "GL08",  # The object does not have a docstring
    "GL09",  # Deprecation warning should precede extended summary
    "GL10",  # reST directives {directives} must be followed by two colons
    # Summary
    # "SS01",  # No summary found
    # "SS02",  # Summary does not start with a capital letter
    #"SS03",  # Summary does not end with a period
    "SS04",  # Summary contains heading whitespaces
    "SS05",  # Summary must start with infinitive verb, not third person
    # Parameters
    #"PR10",  # Parameter "{param_name}" requires a space before the colon '
    # separating the parameter name and type",
}


# Favicon
html_favicon = ansys_favicon

# The suffix(es) of source filenames.
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# The language for content autogenerated by Sphinx_PyAEDT. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["api/index.rst", "api/ansys/dyna/core/index.rst"]


# -- Options for HTML output -------------------------------------------------
html_short_title = html_title = "PyDYNA"
html_show_sourcelink = True
html_theme = "ansys_sphinx_theme"
html_context = {
    "github_user": "ansys",
    "github_repo": "pydyna",
    "github_version": "main",
    "doc_path": "doc/source",
}
html_theme_options = {
    "logo": "pyansys",
    "switcher": {
        "json_url": f"https://{cname}/versions.json",
        "version_match": get_version_match(__version__),
    },
    "github_url": "https://github.com/ansys/pydyna",
    "show_prev_next": False,
    "show_breadcrumbs": True,
    "additional_breadcrumbs": [
        ("PyAnsys", "https://docs.pyansys.com/"),
    ],
    "collapse_navigation": True,
    "use_edit_page_button": True,
    "ansys_sphinx_theme_autoapi": {
        "project": project,
        "ignore": [
            # all other than acore/keyword/auto
            "*core/lib/*",
            "*core/pre/*",
            "*core/solver/*",
            "*core/run/*",
        ],
        "directory": "../../../src/ansys",
        "output": "api",
    },
}

suppress_warnings = ["misc.copy_overwrite"]
