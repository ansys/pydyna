





:class:`Mat188`
===============


.. py:class:: mat_188.Mat188(**kwargs)

   Bases: :py:obj:`ansys.dyna.core.lib.keyword_base.KeywordBase`


   
   DYNA MAT_188 keyword
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: Mat188

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~mid`
            - Get or set the Material identification. A unique number has to be used.
          * - :py:attr:`~ro`
            - Get or set the Mass density.
          * - :py:attr:`~e`
            - Get or set the Young's modulus
          * - :py:attr:`~pr`
            - Get or set the Poisson's ratio
          * - :py:attr:`~sigy`
            - Get or set the Initial yield stress
          * - :py:attr:`~alpha`
            - Get or set the Thermal expansion coefficient
          * - :py:attr:`~lcss`
            - Get or set the Load curve ID or Table ID. The load curve defines effective stress versus effective plastic strain. The Table ID defines for each temperature value a load curve ID giving the stress versus effective plastic strain for that rate.
          * - :py:attr:`~reftem`
            - Get or set the Reference temperature that defines thermal expansion coefficient
          * - :py:attr:`~qr1`
            - Get or set the Isotropic hardening parameter Qr1
          * - :py:attr:`~cr1`
            - Get or set the Isotropic hardening parameter Cr1
          * - :py:attr:`~qr2`
            - Get or set the Isotropic hardening parameter Qr2
          * - :py:attr:`~cr2`
            - Get or set the Isotropic hardening parameter Cr2
          * - :py:attr:`~qx1`
            - Get or set the Kinematic hardening parameter Qx1
          * - :py:attr:`~cx1`
            - Get or set the Kinematic hardening parameter Cx1
          * - :py:attr:`~qx2`
            - Get or set the Kinematic hardening parameter Qx2
          * - :py:attr:`~cx2`
            - Get or set the Kinematic hardening parameter Cx2
          * - :py:attr:`~c`
            - Get or set the Viscous material parameter C
          * - :py:attr:`~p`
            - Get or set the Viscous material parameter P
          * - :py:attr:`~lce`
            - Get or set the Load curve for scaling Young's modulus as a function of temperature
          * - :py:attr:`~lcpr`
            - Get or set the Load curve for scaling Poisson's ratio as a function of temperature
          * - :py:attr:`~lcsigy`
            - Get or set the Load curve for scaling initial yield stress as a function of temperature
          * - :py:attr:`~lcqr`
            - Get or set the Load curve for scaling the isotropic hardening parameters QR1 and QR2 or the stress given by the load curve LCSS as a function of temperature.
          * - :py:attr:`~lcqx`
            - Get or set the Load curve for scaling the kinematic hardening parameters QX1 and QX2 as a function of temperature
          * - :py:attr:`~lcalph`
            - Get or set the Load curve for scaling the thermal expansion coefficient as a function of temperature
          * - :py:attr:`~lcc`
            - Get or set the Load curve for scaling the viscous material parameter C as a function of temperature
          * - :py:attr:`~lcp`
            - Get or set the Load curve for scaling the viscous material parameter P as a function of temperature
          * - :py:attr:`~lccr`
            - Get or set the Load curve for scaling the isotropic hardening parameters CR1 and CR2 as a function of temperature
          * - :py:attr:`~lccx`
            - Get or set the Load curve for scaling the kinematic hardening parameters CX1 and CX2 as a function of temperature
          * - :py:attr:`~crpa`
            - Get or set the Constant A of Garafalo's hyperbolic sine creep law.
          * - :py:attr:`~crpb`
            - Get or set the Constant B of Garafalo's hyperbolic sine creep law.
          * - :py:attr:`~crpq`
            - Get or set the Constant Q of Garafalo's hyperbolic sine creep law.
          * - :py:attr:`~crpm`
            - Get or set the Constant m of Garafalo's hyperbolic sine creep law.
          * - :py:attr:`~crplaw`
            - Get or set the Creep law definition:
          * - :py:attr:`~title`
            - Get or set the Additional title line


   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~keyword`
            - 
          * - :py:attr:`~subkeyword`
            - 
          * - :py:attr:`~option_specs`
            - Get the card format type.






Import detail
-------------

.. code-block:: python

    from mat_188 import Mat188

Property detail
---------------

.. py:property:: mid
   :type: Optional[int]


   
   Get or set the Material identification. A unique number has to be used.
















   ..
       !! processed by numpydoc !!

.. py:property:: ro
   :type: Optional[float]


   
   Get or set the Mass density.
















   ..
       !! processed by numpydoc !!

.. py:property:: e
   :type: Optional[float]


   
   Get or set the Young's modulus
















   ..
       !! processed by numpydoc !!

.. py:property:: pr
   :type: Optional[float]


   
   Get or set the Poisson's ratio
















   ..
       !! processed by numpydoc !!

.. py:property:: sigy
   :type: Optional[float]


   
   Get or set the Initial yield stress
















   ..
       !! processed by numpydoc !!

.. py:property:: alpha
   :type: Optional[float]


   
   Get or set the Thermal expansion coefficient
















   ..
       !! processed by numpydoc !!

.. py:property:: lcss
   :type: Optional[int]


   
   Get or set the Load curve ID or Table ID. The load curve defines effective stress versus effective plastic strain. The Table ID defines for each temperature value a load curve ID giving the stress versus effective plastic strain for that rate.
















   ..
       !! processed by numpydoc !!

.. py:property:: reftem
   :type: Optional[float]


   
   Get or set the Reference temperature that defines thermal expansion coefficient
















   ..
       !! processed by numpydoc !!

.. py:property:: qr1
   :type: Optional[float]


   
   Get or set the Isotropic hardening parameter Qr1
















   ..
       !! processed by numpydoc !!

.. py:property:: cr1
   :type: Optional[float]


   
   Get or set the Isotropic hardening parameter Cr1
















   ..
       !! processed by numpydoc !!

.. py:property:: qr2
   :type: Optional[float]


   
   Get or set the Isotropic hardening parameter Qr2
















   ..
       !! processed by numpydoc !!

.. py:property:: cr2
   :type: Optional[float]


   
   Get or set the Isotropic hardening parameter Cr2
















   ..
       !! processed by numpydoc !!

.. py:property:: qx1
   :type: Optional[float]


   
   Get or set the Kinematic hardening parameter Qx1
















   ..
       !! processed by numpydoc !!

.. py:property:: cx1
   :type: Optional[float]


   
   Get or set the Kinematic hardening parameter Cx1
















   ..
       !! processed by numpydoc !!

.. py:property:: qx2
   :type: Optional[float]


   
   Get or set the Kinematic hardening parameter Qx2
















   ..
       !! processed by numpydoc !!

.. py:property:: cx2
   :type: Optional[float]


   
   Get or set the Kinematic hardening parameter Cx2
















   ..
       !! processed by numpydoc !!

.. py:property:: c
   :type: Optional[float]


   
   Get or set the Viscous material parameter C
















   ..
       !! processed by numpydoc !!

.. py:property:: p
   :type: Optional[float]


   
   Get or set the Viscous material parameter P
















   ..
       !! processed by numpydoc !!

.. py:property:: lce
   :type: Optional[float]


   
   Get or set the Load curve for scaling Young's modulus as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcpr
   :type: Optional[float]


   
   Get or set the Load curve for scaling Poisson's ratio as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcsigy
   :type: Optional[float]


   
   Get or set the Load curve for scaling initial yield stress as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcqr
   :type: Optional[float]


   
   Get or set the Load curve for scaling the isotropic hardening parameters QR1 and QR2 or the stress given by the load curve LCSS as a function of temperature.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcqx
   :type: Optional[float]


   
   Get or set the Load curve for scaling the kinematic hardening parameters QX1 and QX2 as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcalph
   :type: Optional[float]


   
   Get or set the Load curve for scaling the thermal expansion coefficient as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc
   :type: Optional[float]


   
   Get or set the Load curve for scaling the viscous material parameter C as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lcp
   :type: Optional[float]


   
   Get or set the Load curve for scaling the viscous material parameter P as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lccr
   :type: Optional[float]


   
   Get or set the Load curve for scaling the isotropic hardening parameters CR1 and CR2 as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lccx
   :type: Optional[float]


   
   Get or set the Load curve for scaling the kinematic hardening parameters CX1 and CX2 as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: crpa
   :type: Optional[float]


   
   Get or set the Constant A of Garafalo's hyperbolic sine creep law.
















   ..
       !! processed by numpydoc !!

.. py:property:: crpb
   :type: Optional[float]


   
   Get or set the Constant B of Garafalo's hyperbolic sine creep law.
















   ..
       !! processed by numpydoc !!

.. py:property:: crpq
   :type: Optional[float]


   
   Get or set the Constant Q of Garafalo's hyperbolic sine creep law.
















   ..
       !! processed by numpydoc !!

.. py:property:: crpm
   :type: Optional[float]


   
   Get or set the Constant m of Garafalo's hyperbolic sine creep law.
















   ..
       !! processed by numpydoc !!

.. py:property:: crplaw
   :type: float


   
   Get or set the Creep law definition:
   EQ.0.0: Garofalo's hyperbolic sine law (default).
   EQ.1.0: Norton'sower law.
















   ..
       !! processed by numpydoc !!

.. py:property:: title
   :type: Optional[str]


   
   Get or set the Additional title line
















   ..
       !! processed by numpydoc !!



Attribute detail
----------------

.. py:attribute:: keyword
   :value: 'MAT'


.. py:attribute:: subkeyword
   :value: '188'


.. py:attribute:: option_specs

   
   Get the card format type.
















   ..
       !! processed by numpydoc !!





