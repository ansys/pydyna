





:class:`Mat233`
===============


.. py:class:: mat_233.Mat233(**kwargs)

   Bases: :py:obj:`ansys.dyna.core.lib.keyword_base.KeywordBase`


   
   DYNA MAT_233 keyword
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: Mat233

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~mid`
            - Get or set the Material identification. A unique number has to be used.
          * - :py:attr:`~ro`
            - Get or set the Constant Mass density.
          * - :py:attr:`~e`
            - Get or set the Young's modulus
          * - :py:attr:`~pr`
            - Get or set the Poisson's ratio.
          * - :py:attr:`~hr`
            - Get or set the Hardening rules:
          * - :py:attr:`~p1`
            - Get or set the Material parameter:
          * - :py:attr:`~p2`
            - Get or set the Material parameter:
          * - :py:attr:`~iter`
            - Get or set the Iteration flag for speed:
          * - :py:attr:`~a`
            - Get or set the Exponent in Cazacu-Barlat's orthotropic yield surface ( A>1)
          * - :py:attr:`~c11`
            - Get or set the Material parameter (see card 5 pos. 8):FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 00 direction FIT.EQ.0.0: material parameter c11
          * - :py:attr:`~c22`
            - Get or set the Material parameter (see card 5 pos.8) FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 45 direction FIT.EQ.0.0: material parameter c22
          * - :py:attr:`~c33`
            - Get or set the Material parameter (see card 5 pos.8)FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 90 direction FIT.EQ.0.0: material parameter c33
          * - :py:attr:`~lcid`
            - Get or set the Load curve ID for the hardening law (HR.EQ.3.0)
          * - :py:attr:`~e0`
            - Get or set the Material parameter:HR.EQ.2.0: initial yield stress for exponential hardening law (Swift)(default =0.0) HR.EQ.4.0: b, coefficient for exponential hardening (Voce)HR.EQ.5.0: initial yield stress for exponential hardening (Gosh),Default=0.0HR.EQ.6.0: b, coefficient for exponential hardening law (Hocket-Sherby)
          * - :py:attr:`~k`
            - Get or set the Material parameter (see card 5 pos.8)FIT.EQ.1.0 or EQ.2.0: yield stress for compression in the 00 directionFIT.EQ.0.0: material parameter (-1<k<1)
          * - :py:attr:`~p3`
            - Get or set the Material parameter:HR.EQ.5.0: p, coefficient for exponential hardening (Gosh)HR.EQ.6.0: n, exponent for exponential hardening law (Hocket-Sherby)
          * - :py:attr:`~aopt`
            - Get or set the Material axes option (see MAT_OPTION TROPIC_ELASTIC for more complete description). AOPT.EQ.0.0 locally orthotropic with material axes determined by element nodes 1, 2 and 4, as with *DEFINE_COORDINATE_NODES. AOPT.EQ.2.0: globally orthotropic with material axes determined by vectors defined below, as with *DEFINED_COORDINATE_VECTOR. AOPT.EQ.3.0: locally orthotropic material axes determined by rotating the material axes abut the element normal by an angle BETA, from a line in the plane of the element defined by the cross product of the vector V with the element normal. AOPT.LT.0.0: the absolute value of AOPT is coordinate system ID (CID on *DEFINE_COORDINATE_NODES, *DEFINE_COORDINATE_SYSTEM or *DEFINE_COORDINATE_VECTOR). Available with the R3 release of 971 and later.
          * - :py:attr:`~c12`
            - Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C12 is not used.
          * - :py:attr:`~c13`
            - Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C13=0.0
          * - :py:attr:`~c23`
            - Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C23=0.0
          * - :py:attr:`~c44`
            - Get or set the Material parameter (see card 5 pos.8)
          * - :py:attr:`~xp_`
            - Get or set the Coordinates of point p for AOPT = 1 and 4
          * - :py:attr:`~yp_`
            - Get or set the Coordinates of point p for AOPT = 1 and 4
          * - :py:attr:`~zp_`
            - Get or set the Coordinates of point p for AOPT = 1 and 4
          * - :py:attr:`~a1`
            - Get or set the Components of vector a for AOPT=2.0
          * - :py:attr:`~a2`
            - Get or set the Components of vector a for AOPT=2.0
          * - :py:attr:`~a3`
            - Get or set the Components of vector a for AOPT=2.0
          * - :py:attr:`~v1`
            - Get or set the Components of vector v for AOPT=3.0
          * - :py:attr:`~v2`
            - Get or set the Components of vector v for AOPT=3.0
          * - :py:attr:`~v3`
            - Get or set the Components of vector v for AOPT=3.0
          * - :py:attr:`~d1`
            - Get or set the Components of vector d for AOPT=2.0
          * - :py:attr:`~d2`
            - Get or set the Components of vector d for AOPT=2.0
          * - :py:attr:`~d3`
            - Get or set the Components of vector d for AOPT=2.0
          * - :py:attr:`~beta`
            - Get or set the Material angle in degrees for AOPT=3.0. NOTE, may be overridden on the element card, see *ELEMENT_SHELL_BETA
          * - :py:attr:`~fit`
            - Get or set the Flag for parameter identification algorithm:
          * - :py:attr:`~lc1id`
            - Get or set the Load curve ID giving equivalent plastic strain to failure as a
          * - :py:attr:`~lc2id`
            - Get or set the Load curve ID giving equivalent plastic strain to failure as a
          * - :py:attr:`~numint`
            - Get or set the Number of through thickness integration points which must fail
          * - :py:attr:`~lccid`
            - Get or set the Load curve ID giving effective stress in function of plastic strain
          * - :py:attr:`~icflag`
            - Get or set the Automated input conversion flag.
          * - :py:attr:`~idflag`
            - Get or set the Damage flag.
          * - :py:attr:`~lc3id`
            - Get or set the Load curve giving the critical void fraction of the Gurson model
          * - :py:attr:`~epsfg`
            - Get or set the Plastic strain to failure measured in the uniaxial tensile test, this
          * - :py:attr:`~title`
            - Get or set the Additional title line


   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~keyword`
            - 
          * - :py:attr:`~subkeyword`
            - 
          * - :py:attr:`~option_specs`
            - Get the card format type.






Import detail
-------------

.. code-block:: python

    from mat_233 import Mat233

Property detail
---------------

.. py:property:: mid
   :type: Optional[int]


   
   Get or set the Material identification. A unique number has to be used.
















   ..
       !! processed by numpydoc !!

.. py:property:: ro
   :type: Optional[float]


   
   Get or set the Constant Mass density.
















   ..
       !! processed by numpydoc !!

.. py:property:: e
   :type: Optional[float]


   
   Get or set the Young's modulus
   E.GT.0.0: constant value
   E.LT.0.0: load curve ID (-E) which defines the Young's modulus as a function of plastic strain.
















   ..
       !! processed by numpydoc !!

.. py:property:: pr
   :type: float


   
   Get or set the Poisson's ratio.
















   ..
       !! processed by numpydoc !!

.. py:property:: hr
   :type: float


   
   Get or set the Hardening rules:
   EQ.1.0: linear hardening (default)
   EQ.2.0: exponential hardening (Swift)
   EQ.3.0: load curve
   EQ.4.0:exponential hardening (Voce)
   EQ.5.0:exponential hardening (Gosh)
   EQ.6.0:exponential hardening (Hocken-Sherby)
















   ..
       !! processed by numpydoc !!

.. py:property:: p1
   :type: Optional[float]


   
   Get or set the Material parameter:
   HR.EQ.1.0: tangent modulus
   HR.EQ.2.0: q, coefficient for exponential hardening law (Swift)
   HR.EQ.4.0: a, coefficient for exponential hardening law (Voce)
   HR.EQ.5.0: q, coefficient for exponential hardening law (Gosh)
   HR.EQ.6.0: a, coefficient for exponential hardening law (Hocket-Sherby)
















   ..
       !! processed by numpydoc !!

.. py:property:: p2
   :type: Optional[float]


   
   Get or set the Material parameter:
   HR.EQ.1.0: yield stress for the linear hardening law
   HR.EQ.2.0: n, coefficient for the exponential hardening law (Swift)
   HR.EQ.4.0: c, coefficient for exponential hardening law (Voce)
   HR.EQ.5.0: n, coefficient for exponential hardening law (Gosh)
   HR.EQ.6.0: c, coefficient for exponential hardening law (Hocket-Sherby)
















   ..
       !! processed by numpydoc !!

.. py:property:: iter
   :type: float


   
   Get or set the Iteration flag for speed:
   EQ.0.0: fully iterative
   EQ.1.0: fixed at three iterations Generally, ITER=0.0 is recommended. However, ITER=1.0 is faster and may give acceptable results in most problems.
















   ..
       !! processed by numpydoc !!

.. py:property:: a
   :type: Optional[float]


   
   Get or set the Exponent in Cazacu-Barlat's orthotropic yield surface ( A>1)
















   ..
       !! processed by numpydoc !!

.. py:property:: c11
   :type: Optional[float]


   
   Get or set the Material parameter (see card 5 pos. 8):FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 00 direction FIT.EQ.0.0: material parameter c11
















   ..
       !! processed by numpydoc !!

.. py:property:: c22
   :type: Optional[float]


   
   Get or set the Material parameter (see card 5 pos.8) FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 45 direction FIT.EQ.0.0: material parameter c22
















   ..
       !! processed by numpydoc !!

.. py:property:: c33
   :type: float


   
   Get or set the Material parameter (see card 5 pos.8)FIT.EQ.1.0 or EQ.2.0: yield stress for tension in the 90 direction FIT.EQ.0.0: material parameter c33
















   ..
       !! processed by numpydoc !!

.. py:property:: lcid
   :type: Optional[int]


   
   Get or set the Load curve ID for the hardening law (HR.EQ.3.0)
















   ..
       !! processed by numpydoc !!

.. py:property:: e0
   :type: Optional[float]


   
   Get or set the Material parameter:HR.EQ.2.0: initial yield stress for exponential hardening law (Swift)(default =0.0) HR.EQ.4.0: b, coefficient for exponential hardening (Voce)HR.EQ.5.0: initial yield stress for exponential hardening (Gosh),Default=0.0HR.EQ.6.0: b, coefficient for exponential hardening law (Hocket-Sherby)
















   ..
       !! processed by numpydoc !!

.. py:property:: k
   :type: Optional[float]


   
   Get or set the Material parameter (see card 5 pos.8)FIT.EQ.1.0 or EQ.2.0: yield stress for compression in the 00 directionFIT.EQ.0.0: material parameter (-1<k<1)
















   ..
       !! processed by numpydoc !!

.. py:property:: p3
   :type: Optional[float]


   
   Get or set the Material parameter:HR.EQ.5.0: p, coefficient for exponential hardening (Gosh)HR.EQ.6.0: n, exponent for exponential hardening law (Hocket-Sherby)
















   ..
       !! processed by numpydoc !!

.. py:property:: aopt
   :type: Optional[float]


   
   Get or set the Material axes option (see MAT_OPTION TROPIC_ELASTIC for more complete description). AOPT.EQ.0.0 locally orthotropic with material axes determined by element nodes 1, 2 and 4, as with *DEFINE_COORDINATE_NODES. AOPT.EQ.2.0: globally orthotropic with material axes determined by vectors defined below, as with *DEFINED_COORDINATE_VECTOR. AOPT.EQ.3.0: locally orthotropic material axes determined by rotating the material axes abut the element normal by an angle BETA, from a line in the plane of the element defined by the cross product of the vector V with the element normal. AOPT.LT.0.0: the absolute value of AOPT is coordinate system ID (CID on *DEFINE_COORDINATE_NODES, *DEFINE_COORDINATE_SYSTEM or *DEFINE_COORDINATE_VECTOR). Available with the R3 release of 971 and later.
















   ..
       !! processed by numpydoc !!

.. py:property:: c12
   :type: Optional[float]


   
   Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C12 is not used.
















   ..
       !! processed by numpydoc !!

.. py:property:: c13
   :type: Optional[float]


   
   Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C13=0.0
















   ..
       !! processed by numpydoc !!

.. py:property:: c23
   :type: Optional[float]


   
   Get or set the Material parameter. If parameter identification (FIT=1.0) is turned on C23=0.0
















   ..
       !! processed by numpydoc !!

.. py:property:: c44
   :type: Optional[float]


   
   Get or set the Material parameter (see card 5 pos.8)
   FIT.EQ.1.0 or EQ.2.0: yield stress for the balanced biaxial tension test
   FIT.EQ.0.0: material parameter c44
















   ..
       !! processed by numpydoc !!

.. py:property:: xp_
   :type: Optional[int]


   
   Get or set the Coordinates of point p for AOPT = 1 and 4
















   ..
       !! processed by numpydoc !!

.. py:property:: yp_
   :type: Optional[int]


   
   Get or set the Coordinates of point p for AOPT = 1 and 4
















   ..
       !! processed by numpydoc !!

.. py:property:: zp_
   :type: Optional[int]


   
   Get or set the Coordinates of point p for AOPT = 1 and 4
















   ..
       !! processed by numpydoc !!

.. py:property:: a1
   :type: float


   
   Get or set the Components of vector a for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: a2
   :type: Optional[float]


   
   Get or set the Components of vector a for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: a3
   :type: Optional[float]


   
   Get or set the Components of vector a for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: v1
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT=3.0
















   ..
       !! processed by numpydoc !!

.. py:property:: v2
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT=3.0
















   ..
       !! processed by numpydoc !!

.. py:property:: v3
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT=3.0
















   ..
       !! processed by numpydoc !!

.. py:property:: d1
   :type: Optional[float]


   
   Get or set the Components of vector d for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: d2
   :type: Optional[float]


   
   Get or set the Components of vector d for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: d3
   :type: Optional[float]


   
   Get or set the Components of vector d for AOPT=2.0
















   ..
       !! processed by numpydoc !!

.. py:property:: beta
   :type: Optional[float]


   
   Get or set the Material angle in degrees for AOPT=3.0. NOTE, may be overridden on the element card, see *ELEMENT_SHELL_BETA
















   ..
       !! processed by numpydoc !!

.. py:property:: fit
   :type: int


   
   Get or set the Flag for parameter identification algorithm:
   EQ.0.0: No parameter identification routine is used. The variables K, C11, C22, C33, C44, C12, C13 and C23 are interpreted as material parameters.
   EQ.1.0: Parameter fit is used. The variables C11, C22, C33, C44 and K are interpreted as yield stresses in the 00, 45, 90 degree directions, the balanced biaxial tension and the 00 degree compression, respectively. NOTE: it is recommended to always check the d3hsp file to see the fitted parameters before complex jobs are submitted.
   EQ.2.0: Same as EQ.1.0 but also produce contour plots of the yield surface. For each material three LS-PrePost ready xy-datafiles are created; Contour1_x, Contour2_x and Contour3_x where xequal the material numbers.
















   ..
       !! processed by numpydoc !!

.. py:property:: lc1id
   :type: Optional[int]


   
   Get or set the Load curve ID giving equivalent plastic strain to failure as a
   function of stress triaxiality or a table ID giving plastic strain to
   failure as a function of Lode parameter and stress triaxiality (solids)
















   ..
       !! processed by numpydoc !!

.. py:property:: lc2id
   :type: Optional[int]


   
   Get or set the Load curve ID giving equivalent plastic strain to failure as a
   function of equivalent plastic strain rate, the failure strain will be
   computed as the product of the values on LC1ID and LC2ID
















   ..
       !! processed by numpydoc !!

.. py:property:: numint
   :type: Optional[int]


   
   Get or set the Number of through thickness integration points which must fail
   before the element is deleted (inactive for solid elements
















   ..
       !! processed by numpydoc !!

.. py:property:: lccid
   :type: Optional[int]


   
   Get or set the Load curve ID giving effective stress in function of plastic strain
   obtained from a compression stress, input of this load curve will
   activate distortional hardening and is NOT compatible with the use of strain rate effects
















   ..
       !! processed by numpydoc !!

.. py:property:: icflag
   :type: Optional[int]


   
   Get or set the Automated input conversion flag.
   EQ.0 then the load
   curves provided under LCID and LCCID contain Cazacu-Barlat
   effective stress as a function of energy conjugate plastic strain. If
   EQ.1 then both load curves are given in terms of von
   Mises stress versus equivalent plastic strain
















   ..
       !! processed by numpydoc !!

.. py:property:: idflag
   :type: Optional[int]


   
   Get or set the Damage flag.
   EQ.0 the failure model is of the Johnson
   Cook type and requires LC1ID and LC2ID as additional input. If
   EQ.1 the failure model is of the Gurson type and requires
   LC3ID and EPSFG as additional input
















   ..
       !! processed by numpydoc !!

.. py:property:: lc3id
   :type: Optional[int]


   
   Get or set the Load curve giving the critical void fraction of the Gurson model
   as a function of the plastic strain to failure measured in the uniaxial tensile test
















   ..
       !! processed by numpydoc !!

.. py:property:: epsfg
   :type: Optional[float]


   
   Get or set the Plastic strain to failure measured in the uniaxial tensile test, this
   value is used by the Gurson type failure model only.
















   ..
       !! processed by numpydoc !!

.. py:property:: title
   :type: Optional[str]


   
   Get or set the Additional title line
















   ..
       !! processed by numpydoc !!



Attribute detail
----------------

.. py:attribute:: keyword
   :value: 'MAT'


.. py:attribute:: subkeyword
   :value: '233'


.. py:attribute:: option_specs

   
   Get the card format type.
















   ..
       !! processed by numpydoc !!





