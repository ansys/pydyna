





:class:`Mat264`
===============


.. py:class:: mat_264.Mat264(**kwargs)

   Bases: :py:obj:`ansys.dyna.core.lib.keyword_base.KeywordBase`


   
   DYNA MAT_264 keyword
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: Mat264

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~mid`
            - Get or set the Material identification. A unique number has to be used.
          * - :py:attr:`~ro`
            - Get or set the Mass density.
          * - :py:attr:`~e`
            - Get or set the Young's modulus.
          * - :py:attr:`~pr`
            - Get or set the Poisson's ratio.
          * - :py:attr:`~cp`
            - Get or set the Specific heat.
          * - :py:attr:`~tr`
            - Get or set the Room temperature.
          * - :py:attr:`~beta`
            - Get or set the Amount of plastic work converted into heat
          * - :py:attr:`~numint`
            - Get or set the Number of integration points which must fail before the element is deleted. Available for shells and solids.
          * - :py:attr:`~lct00r`
            - Get or set the Load curve ID or Table ID. The load curve ID defines effective stress as a function of effective plastic strain. The table ID defines for each plastic strain rate value a load curve ID giving the (isothermal) effective stress versus effective plastic strain for that rate.
          * - :py:attr:`~lct00t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) effective stress versus effective plastic strain for that temperature.
          * - :py:attr:`~lcf`
            - Get or set the Load curve ID or Table ID. The load curve ID defines plastic failure strain as a function of triaxiality. The table ID defines for each Lode angle a load curve ID giving the plastic failure strain versus triaxiality for that Lode angle. (Table option only for solids and not yet generally supported).
          * - :py:attr:`~lcg`
            - Get or set the Load curve ID defining plastic failure strain as a function of strain rate.
          * - :py:attr:`~lch`
            - Get or set the Load curve ID defining plastic failure strain as a function of temperature
          * - :py:attr:`~lci`
            - Get or set the Load curve ID defining plastic failure strain as a function of element size..
          * - :py:attr:`~lcc00r`
            - Get or set the Table ID. The curves in this table define compressive yield stress as a function of plastic strain or effective plastic strain (see IFLAG). The table ID defines for each plastic strain rate value or effective plastic strain rate value a load curve ID giving the (isothermal) compressive yield stress versus plastic strain or effective plastic strain for that rate.
          * - :py:attr:`~lcc00t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) compressive yield stress versus strain for that temperature. The curves in this table define compressive yield stress as a function of plastic strain or effective plastic strain (see IFLAG).
          * - :py:attr:`~lcs45r`
            - Get or set the Table ID. The load curves define shear yield stress in function of plastic strain or effective plastic strain (see IFLAG).The table ID defines for each plastic strain rate value or effective plastic strain rate value a load curve ID giving the (isothermal) shear yield stress versus plastic strain or effective plastic strain for that rate.
          * - :py:attr:`~lcs45t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) shear yield stress versus strain for that temperature. The load curves define shear yield stress as a function of plastic strain or effective plastic strain (see IFLAG).
          * - :py:attr:`~iflag`
            - Get or set the Flag to specify abscissa for LCCR, LCCT, LCSR, LCST:
          * - :py:attr:`~sfiepm`
            - Get or set the Scale factor on the initial estimate of the plastic multiplier.
          * - :py:attr:`~niter`
            - Get or set the Maximum number of iterations for the plasticity algorithm.
          * - :py:attr:`~aopt`
            - Get or set the Material axes option (see MAT_OPTIONTROPIC_ELASTIC, particularly the Material Directions section, for details):
          * - :py:attr:`~lct90r`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield  stress versus  plastic strain for that rate in the 90 degree direction.
          * - :py:attr:`~lct45r`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield  stress versus plastic strain for that rate in the 45 degree direction.
          * - :py:attr:`~lctthr`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield stress versus plastic strain for that rate in the thickness degree direction.
          * - :py:attr:`~lcc90r`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield  stress versus  plastic strain for that rate in the 90 degree direction.
          * - :py:attr:`~lcc45r`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield  stress versus plastic strain for that rate in the 45 degree direction.
          * - :py:attr:`~lccth`
            - Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield stress versus plastic strain for that rate in the thickness degree direction.
          * - :py:attr:`~lct90t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield  stress versus  plastic strain for that rate in the 90 degree direction.
          * - :py:attr:`~lct45t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield  stress versus plastic strain for that rate in the 45 degree direction.
          * - :py:attr:`~lcttht`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield stress versus plastic strain for that rate in the thickness degree direction.
          * - :py:attr:`~lcc90t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield  stress versus  plastic strain for that rate in the 90 degree direction.
          * - :py:attr:`~lcc45t`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield  stress versus plastic strain for that rate in the 45 degree direction.
          * - :py:attr:`~lcctht`
            - Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield stress versus plastic strain for that rate in the thickness degree direction.
          * - :py:attr:`~xp`
            - Get or set the
          * - :py:attr:`~yp`
            - Get or set the
          * - :py:attr:`~zp`
            - Get or set the
          * - :py:attr:`~a1`
            - Get or set the Components of vector a for AOPT = 2.
          * - :py:attr:`~a2`
            - Get or set the Components of vector a for AOPT = 2.
          * - :py:attr:`~a3`
            - Get or set the Components of vector a for AOPT = 2.
          * - :py:attr:`~macf`
            - Get or set the Material axes change flag for solid elements:
          * - :py:attr:`~v1`
            - Get or set the Components of vector v for AOPT = 3.
          * - :py:attr:`~v2`
            - Get or set the Components of vector v for AOPT = 3.
          * - :py:attr:`~v3`
            - Get or set the Components of vector v for AOPT = 3.
          * - :py:attr:`~d1`
            - Get or set the Components of vector dfor AOPT = 2.
          * - :py:attr:`~d2`
            - Get or set the Components of vector dfor AOPT = 2.
          * - :py:attr:`~d3`
            - Get or set the Components of vector dfor AOPT = 2.
          * - :py:attr:`~title`
            - Get or set the Additional title line


   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~keyword`
            - 
          * - :py:attr:`~subkeyword`
            - 
          * - :py:attr:`~option_specs`
            - Get the card format type.






Import detail
-------------

.. code-block:: python

    from mat_264 import Mat264

Property detail
---------------

.. py:property:: mid
   :type: Optional[int]


   
   Get or set the Material identification. A unique number has to be used.
















   ..
       !! processed by numpydoc !!

.. py:property:: ro
   :type: Optional[float]


   
   Get or set the Mass density.
















   ..
       !! processed by numpydoc !!

.. py:property:: e
   :type: Optional[float]


   
   Get or set the Young's modulus.
















   ..
       !! processed by numpydoc !!

.. py:property:: pr
   :type: Optional[float]


   
   Get or set the Poisson's ratio.
















   ..
       !! processed by numpydoc !!

.. py:property:: cp
   :type: Optional[float]


   
   Get or set the Specific heat.
















   ..
       !! processed by numpydoc !!

.. py:property:: tr
   :type: Optional[float]


   
   Get or set the Room temperature.
















   ..
       !! processed by numpydoc !!

.. py:property:: beta
   :type: float


   
   Get or set the Amount of plastic work converted into heat
















   ..
       !! processed by numpydoc !!

.. py:property:: numint
   :type: float


   
   Get or set the Number of integration points which must fail before the element is deleted. Available for shells and solids.
   LT.0.0: |NUMINT| is percentage of integration points/layers which must fail before element fails. For fully integrated shells, a methodology is used where a layer fails if one integrationpoint fails and then the given percentage of layers must fail before the element fails.
















   ..
       !! processed by numpydoc !!

.. py:property:: lct00r
   :type: int


   
   Get or set the Load curve ID or Table ID. The load curve ID defines effective stress as a function of effective plastic strain. The table ID defines for each plastic strain rate value a load curve ID giving the (isothermal) effective stress versus effective plastic strain for that rate.
















   ..
       !! processed by numpydoc !!

.. py:property:: lct00t
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) effective stress versus effective plastic strain for that temperature.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcf
   :type: int


   
   Get or set the Load curve ID or Table ID. The load curve ID defines plastic failure strain as a function of triaxiality. The table ID defines for each Lode angle a load curve ID giving the plastic failure strain versus triaxiality for that Lode angle. (Table option only for solids and not yet generally supported).
















   ..
       !! processed by numpydoc !!

.. py:property:: lcg
   :type: int


   
   Get or set the Load curve ID defining plastic failure strain as a function of strain rate.
















   ..
       !! processed by numpydoc !!

.. py:property:: lch
   :type: int


   
   Get or set the Load curve ID defining plastic failure strain as a function of temperature
















   ..
       !! processed by numpydoc !!

.. py:property:: lci
   :type: int


   
   Get or set the Load curve ID defining plastic failure strain as a function of element size..
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc00r
   :type: Optional[float]


   
   Get or set the Table ID. The curves in this table define compressive yield stress as a function of plastic strain or effective plastic strain (see IFLAG). The table ID defines for each plastic strain rate value or effective plastic strain rate value a load curve ID giving the (isothermal) compressive yield stress versus plastic strain or effective plastic strain for that rate.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc00t
   :type: Optional[float]


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) compressive yield stress versus strain for that temperature. The curves in this table define compressive yield stress as a function of plastic strain or effective plastic strain (see IFLAG).
















   ..
       !! processed by numpydoc !!

.. py:property:: lcs45r
   :type: Optional[float]


   
   Get or set the Table ID. The load curves define shear yield stress in function of plastic strain or effective plastic strain (see IFLAG).The table ID defines for each plastic strain rate value or effective plastic strain rate value a load curve ID giving the (isothermal) shear yield stress versus plastic strain or effective plastic strain for that rate.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcs45t
   :type: Optional[float]


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasi-static) shear yield stress versus strain for that temperature. The load curves define shear yield stress as a function of plastic strain or effective plastic strain (see IFLAG).
















   ..
       !! processed by numpydoc !!

.. py:property:: iflag
   :type: int


   
   Get or set the Flag to specify abscissa for LCCR, LCCT, LCSR, LCST:
   EQ.0.0: Compressive and shear yields are given in a function of plastic strain (default).
   EQ.1.0: Compressive and shear strain are given in function of effective plastic strain.
















   ..
       !! processed by numpydoc !!

.. py:property:: sfiepm
   :type: int


   
   Get or set the Scale factor on the initial estimate of the plastic multiplier.
















   ..
       !! processed by numpydoc !!

.. py:property:: niter
   :type: int


   
   Get or set the Maximum number of iterations for the plasticity algorithm.
















   ..
       !! processed by numpydoc !!

.. py:property:: aopt
   :type: Optional[float]


   
   Get or set the Material axes option (see MAT_OPTIONTROPIC_ELASTIC, particularly the Material Directions section, for details):
   EQ.0.0: Locally orthotropic with material axes determined by element nodes 1, 2,and 4, as with* DEFINE_COORDINATE_NODES.
   EQ.1.0 : Locally orthotropic with material axes determined by a point, P, in spaceand the global location of the element center; this is the a - direction.
   EQ.2.0: Globally orthotropic with material axes determined by vectors defined below, as with* DEFINE_COORDINATE_VECTOR
   EQ.3.0 : Locally orthotropic material axes determined by a vector v and the normal vector to the plane of the element.The plane of a solid element is the midsurface between the inner surface and outer surface defined by the first four nodes and the last four nodes of the connectivity of the element, respectively.Thus, AOPT = 3 is only available for hexahedrons.a is determined by taking the cross product of v with the normal vector, b is determined by taking the cross product of the normal vector with a,and c is the normal vector.Then aand b are rotated about c by an angle.The angle may be set in the keyword input for the element or in the input for this keyword(see MANGLE).Note that the material axes may be switched depending on the choice of MACF.The switch may occur before or after applying the angle depending on the value of MACF.
   EQ.4.0 : Locally orthotropic in a cylindrical coordinate system with the material axes determined by a vector v,and an originating point, P, which define the centerline axis.
   LT.0.0 : The absolute value of AOPT is a coordinate system ID number(CID on * DEFINE_COORDINATE_OPTION).
















   ..
       !! processed by numpydoc !!

.. py:property:: lct90r
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield  stress versus  plastic strain for that rate in the 90 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lct45r
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield  stress versus plastic strain for that rate in the 45 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lctthr
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) tensile yield stress versus plastic strain for that rate in the thickness degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc90r
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield  stress versus  plastic strain for that rate in the 90 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc45r
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield  stress versus plastic strain for that rate in the 45 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lccth
   :type: int


   
   Get or set the Table ID defining for each plastic strain rate value a load curve ID giving the (isothermal) compressive yield stress versus plastic strain for that rate in the thickness degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lct90t
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield  stress versus  plastic strain for that rate in the 90 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lct45t
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield  stress versus plastic strain for that rate in the 45 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcttht
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) tensile yield stress versus plastic strain for that rate in the thickness degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc90t
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield  stress versus  plastic strain for that rate in the 90 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcc45t
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield  stress versus plastic strain for that rate in the 45 degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: lcctht
   :type: int


   
   Get or set the Table ID defining for each temperature value a load curve ID giving the (quasistatic) compressive yield stress versus plastic strain for that rate in the thickness degree direction.
















   ..
       !! processed by numpydoc !!

.. py:property:: xp
   :type: Optional[float]


   
   Get or set the 
















   ..
       !! processed by numpydoc !!

.. py:property:: yp
   :type: Optional[float]


   
   Get or set the 
















   ..
       !! processed by numpydoc !!

.. py:property:: zp
   :type: Optional[float]


   
   Get or set the 
















   ..
       !! processed by numpydoc !!

.. py:property:: a1
   :type: Optional[float]


   
   Get or set the Components of vector a for AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: a2
   :type: Optional[float]


   
   Get or set the Components of vector a for AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: a3
   :type: Optional[float]


   
   Get or set the Components of vector a for AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: macf
   :type: float


   
   Get or set the Material axes change flag for solid elements:
   EQ. - 4:        Switch material axes b and c before BETA or MANGLE rotation
   EQ. - 3 : Switch material axes a and c before BETA or MANGLE rotation
   EQ. - 2 : Switch material axes a and b before BETA or MANGLE rotation
   EQ.1 : No change, default
   EQ.2 : Switch material axes a and b after BETA or MANGLE rotation
   EQ.3 : Switch material axes a and c after BETA or MANGLE rotation
   EQ.4 : Switch material axes b and c after BETA or MANGLE rotation
   Figure Error!Reference source not found.indicates when LS - DYNA applies MACF during the process to obtain the final material axes.If BETA on * ELEMENT_SOLID_{OPTION} is defined, then BETA is used for the rotation for all AOPT options.Otherwise, for AOPT = 3, MANGLE input on Card 3 rotates the axes.For all other values of AOPT, the material axes will be switched as specified by MACF, but no rotation will be performed.
















   ..
       !! processed by numpydoc !!

.. py:property:: v1
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT = 3.
















   ..
       !! processed by numpydoc !!

.. py:property:: v2
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT = 3.
















   ..
       !! processed by numpydoc !!

.. py:property:: v3
   :type: Optional[float]


   
   Get or set the Components of vector v for AOPT = 3.
















   ..
       !! processed by numpydoc !!

.. py:property:: d1
   :type: Optional[float]


   
   Get or set the Components of vector dfor AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: d2
   :type: Optional[float]


   
   Get or set the Components of vector dfor AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: d3
   :type: Optional[float]


   
   Get or set the Components of vector dfor AOPT = 2.
















   ..
       !! processed by numpydoc !!

.. py:property:: title
   :type: Optional[str]


   
   Get or set the Additional title line
















   ..
       !! processed by numpydoc !!



Attribute detail
----------------

.. py:attribute:: keyword
   :value: 'MAT'


.. py:attribute:: subkeyword
   :value: '264'


.. py:attribute:: option_specs

   
   Get the card format type.
















   ..
       !! processed by numpydoc !!





