#import ansys.dyna.solver as solver

import datetime
import os

import pyvista
from ansys_sphinx_theme import get_version_match, ansys_favicon
from sphinx.builders.latex import LaTeXBuilder
from sphinx_gallery.sorting import FileNameSortKey

from ansys.dyna.core import __version__

LaTeXBuilder.supported_image_types = ["image/png", "image/pdf", "image/svg+xml"]


# Project information
project = 'ansys-dyna-core'
copyright = f"(c) {datetime.datetime.now().year} ANSYS, Inc. All rights reserved"
author = 'ANSYS Inc.'
release = version = __version__
cname = os.getenv("DOCUMENTATION_CNAME", default="nocname.com")

# Sphinx extensions
extensions = [
    'sphinx.ext.intersphinx',
    'sphinx.ext.autodoc',
    'sphinx.ext.viewcode',
    'numpydoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.inheritance_diagram',
    "sphinx_jinja",
    "pyvista.ext.plot_directive",
]

# Intersphinx mapping
intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "numpy": ("https://numpy.org/devdocs", None),
    "matplotlib": ("https://matplotlib.org/stable", None),
    "imageio": ("https://imageio.readthedocs.io/en/stable", None),
    "pandas": ("https://pandas.pydata.org/pandas-docs/stable", None),
    "pytest": ("https://docs.pytest.org/en/stable", None),
    }

# Numpydoc config
numpydoc_use_plots = True
numpydoc_show_class_members = False  # we take care of autosummary on our own
numpydoc_xref_param_type = True
numpydoc_validate = True
numpydoc_validation_checks = {
    # general
    "GL06",  # Found unknown section
    "GL07",  # Sections are in the wrong order.
    # "GL08",  # The object does not have a docstring
    "GL09",  # Deprecation warning should precede extended summary
    "GL10",  # reST directives {directives} must be followed by two colons
    # Summary
    "SS01",  # No summary found
    "SS02",  # Summary does not start with a capital letter
    "SS03",  # Summary does not end with a period
    "SS04",  # Summary contains heading whitespaces
    "SS05",  # Summary must start with infinitive verb, not third person
    # Parameters
    "PR10",  # Parameter "{param_name}" requires a space before the colon '
    # separating the parameter name and type",
}


# Favicon
html_favicon = ansys_favicon

# The suffix(es) of source filenames.
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# The language for content autogenerated by Sphinx_PyAEDT. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "sphinx_boogergreen_theme_1", "Thumbs.db", ".DS_Store", "*.txt", "links.rst"]

# make rst_epilog a variable, so you can add other epilog parts to it
rst_epilog = ""

# Read link all targets from file
with open("links.rst") as f:
    rst_epilog += f.read()

inheritance_graph_attrs = dict(rankdir="RL", size='"8.0, 10.0"', fontsize=14, ratio="compress")
inheritance_node_attrs = dict(shape="ellipse", fontsize=14, height=0.75, color="dodgerblue1", style="filled")

# -- Options for HTML output -------------------------------------------------
html_short_title = html_title = "PyDYNA"
html_show_sourcelink = True
html_theme = "ansys_sphinx_theme"
html_context = {
    "github_user": "ansys",
    "github_repo": "pydyna",
    "github_version": "main",
    "doc_path": "doc/source",
}
html_theme_options = {
    "logo": "pyansys",
    "switcher": {
        "json_url": f"https://{cname}/versions.json",
        "version_match": get_version_match(__version__),
    },
    "check_switcher": False,
    "navbar_end": ["version-switcher", "theme-switcher", "navbar-icon-links"],
    "github_url": "https://github.com/ansys/pydyna",
    "show_prev_next": False,
    "show_breadcrumbs": True,
    "additional_breadcrumbs": [
        ("PyAnsys", "https://docs.pyansys.com/"),
    ],
    "collapse_navigation": True,
    "use_edit_page_button": True,
}

# static path
html_static_path = ['_static']


# -- Declare the Jinja context -----------------------------------------------
BUILD_API = True if os.environ.get("BUILD_API", "true") == "true" else False
if not BUILD_API:
    exclude_patterns.append("_autoapi_templates")
else:
    # Configuration for Sphinx autoapi
    extensions.append("autoapi.extension")
    autoapi_dirs = ["../../src/ansys"]
    autoapi_ignore = ["*keyword_classes/auto*"]
    autoapi_type = "python"
    autoapi_options = [
        "members",
        "undoc-members",
        "show-inheritance",
        "show-module-summary",
        "special-members",
    ]
    autoapi_template_dir = "_autoapi_templates"
    suppress_warnings = ["autoapi.python_import_resolution"]
    exclude_patterns.append("_autoapi_templates/index.rst")
    autoapi_python_use_implicit_namespaces = True

BUILD_EXAMPLES = (
    True if os.environ.get("BUILD_EXAMPLES", "true") == "true" else False
)
if BUILD_EXAMPLES is True:
    # Necessary for pyvista when building the sphinx gallery
    extensions.append("sphinx_gallery.gen_gallery")
    pyvista.BUILDING_GALLERY = True
    sphinx_gallery_conf = {
                # convert rst to md for ipynb
                "pypandoc": True,
                # path to your examples scripts
                "examples_dirs": ["../../examples/"],
                # path where to save gallery generated examples
                "gallery_dirs": ["examples"],
                # Patter to search for examples files
                "filename_pattern": r"\.py",
                # Patter to omit some files
                "ignore_pattern": r"/*_data.py",
                # Remove the "Download all examples" button from the top level gallery
                "download_all_examples": False,
                # Sort gallery examples by file name instead of number of lines (default)
                "within_subsection_order": FileNameSortKey,
                # directory where function granular galleries are stored
                "backreferences_dir": None,
                # Modules for which function level galleries are created.  In
                "doc_module": "ansys-dyna-core",
                "image_scrapers": ("pyvista", "matplotlib"),
                "thumbnail_size": (600, 300),
                # 'first_notebook_cell': ("%matplotlib inline\n"
                #                         "from pyvista import set_plot_theme\n"
                #                         "set_plot_theme('document')"),
                'remove_config_comments': True,
            }

jinja_contexts = {
    "main_toctree": {
        "build_api": BUILD_API,
        "build_examples": BUILD_EXAMPLES,
    },
}
