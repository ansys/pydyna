
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/ICFD/icfd_dam_break.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_ICFD_icfd_dam_break.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ICFD_icfd_dam_break.py:


Dam break
=========

This example shows a simple free surface example using the ICFD solver. A column of water collapses under the load of gravity. 

LS-DYNA version : ls-dyna_smp_d_R13.1_138-g8429c8a10f_winx64_ifort190.exe

.. GENERATED FROM PYTHON SOURCE LINES 8-82




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    length: 1






|

.. code-block:: default


    import os
    import sys


    from ansys.dyna.core.pre.dynasolution import DynaSolution
    from ansys.dyna.core.pre.dynaicfd import (
        DynaICFD,
        MatICFD,
        ICFDPart,
        Curve,
        ICFDVolumePart,
        MeshedVolume,
        ICFDAnalysis,
        Gravity,
        GravityOption,
        Compressible
    )
    from ansys.dyna.core.pre import examples

    hostname = "localhost"
    if len(sys.argv) > 1:
        hostname = sys.argv[1]

    solution = DynaSolution(hostname)
    # Import the initial mesh data(nodes and elements)
    fns = []
    path = examples.dam_break + os.sep
    fns.append(path + "dam_break.k")
    solution.open_files(fns)
    solution.set_termination(termination_time=50)
    icfd = DynaICFD()
    solution.add(icfd)

    icfdanalysis = ICFDAnalysis()
    icfdanalysis.set_timestep()
    icfd.add(icfdanalysis)

    # define model
    mat1 = MatICFD(flow_density=1000, dynamic_viscosity=0.001)
    mat2 = MatICFD(flag=Compressible.VACUUM)

    part1 = ICFDPart(1)
    part1.set_material(mat1)
    part1.set_free_slip()
    icfd.parts.add(part1)

    part2 = ICFDPart(2)
    part2.set_material(mat2)
    part2.set_free_slip()
    icfd.parts.add(part2)

    part3 = ICFDPart(3)
    part3.set_material(mat1)
    icfd.parts.add(part3)

    g = Gravity(dir=GravityOption.DIR_Y, load=Curve(x=[0, 10000], y=[9.81, 9.81]))
    icfd.add(g)

    partvol1 = ICFDVolumePart(surfaces=[1, 3])
    partvol1.set_material(mat1)
    icfd.parts.add(partvol1)

    partvol2 = ICFDVolumePart(surfaces=[2, 3])
    partvol2.set_material(mat2)
    icfd.parts.add(partvol2)
    # define the volume space that will be meshed,The boundaries
    # of the volume are the surfaces "spids"
    meshvol = MeshedVolume(surfaces=[1, 2])
    meshvol.set_fluid_interfaces([3])
    icfd.add(meshvol)

    solution.create_database_binary(dt=0.2)
    solution.save_file()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.026 seconds)


.. _sphx_glr_download_examples_ICFD_icfd_dam_break.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: icfd_dam_break.py <icfd_dam_break.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: icfd_dam_break.ipynb <icfd_dam_break.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
