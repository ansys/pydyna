
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Optimization/Plate_Thickness_Optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_Optimization_Plate_Thickness_Optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Optimization_Plate_Thickness_Optimization.py:


Plate Thickness Optimization
------------------
This example shows how to use PyDyna to import a mesh, set up a plate thickness
optimization analysis, run the analysis iteratively until a target displacement
is reached,and then display the results of that optimization.

.. LINKS AND REFERENCES
.. _ls_dyna_knowledge_base: https://lsdyna.ansys.com/knowledge-base/

.. GENERATED FROM PYTHON SOURCE LINES 35-38

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Import required packages, including those for the keywords, deck, and solver.

.. GENERATED FROM PYTHON SOURCE LINES 38-73

.. code-block:: Python


    import os
    import pathlib
    import shutil
    import tempfile

    import ansys.dpf.core as dpf
    from ansys.dpf.core import operators as ops
    import matplotlib.pyplot as plt
    import pandas as pd

    from ansys.dyna.core import Deck
    from ansys.dyna.core import keywords as kwd
    from ansys.dyna.core.pre.examples.download_utilities import EXAMPLES_PATH, DownloadManager

    # from ansys.dyna.core.run.linux_runner import LinuxRunner
    from ansys.dyna.core.run.local_solver import run_dyna
    from ansys.dyna.core.run.options import MemoryUnit, MpiOption, Precision

    # from ansys.dyna.core.run.windows_runner import WindowsRunner



    workdir = tempfile.TemporaryDirectory()

    mesh_file_name = "bar_impact_mesh.k"

    mesh_file = DownloadManager().download_file(
        mesh_file_name, "ls-dyna", "Bar_Impact", destination=os.path.join(EXAMPLES_PATH, "Bar_Impact")
    )

    # If you'd like to insert your own path to a local mesh file you can do so by replacing the line
    # above with:
    # mesh_file = "C:\Path\to\file\\bar_impact_mesh.k"








.. GENERATED FROM PYTHON SOURCE LINES 75-79

Set analysis parameters
~~~~~~~~~~~~~~~~~~~~~~~~
Define the number of iterations, thickness increment, target displacement,
and initial velocity for the analysis

.. GENERATED FROM PYTHON SOURCE LINES 79-86

.. code-block:: Python


    max_iterations = 20
    initial_thickness = 0.1
    thickness_increment = 0.05
    target_displacement = 1.0
    initial_velocity = 275.0e2








.. GENERATED FROM PYTHON SOURCE LINES 87-91

Create a deck and keywords
~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a deck, which is the container for all the keywords.
Then, create and append individual keywords to the deck.

.. GENERATED FROM PYTHON SOURCE LINES 91-275

.. code-block:: Python



    def create_input_deck(thickness):
        deck = Deck()
        deck.title = "Bar Thickness - %.4s" % thickness

        # Define bar material
        mat_1 = kwd.Mat003(mid=1)
        mat_1.ro = 7.85000e-9
        mat_1.e = 150000.0
        mat_1.pr = 0.34
        mat_1.sigy = 390.0
        mat_1.etan = 90.0

        # Define bar section
        sec_1 = kwd.SectionSolid(secid=1)
        sec_1.elform = 1

        # Define plate material
        mat_2 = kwd.Mat003(mid=2)
        mat_2.ro = 7.85000e-9
        mat_2.e = 1500000.0
        mat_2.pr = 0.34
        mat_2.sigy = 3900.0
        mat_2.etan = 900.0

        # Define plate section
        sec_2 = kwd.SectionShell(secid=2)
        sec_2.elform = 2
        sec_2.t1 = thickness
        sec_2.t2 = thickness
        sec_2.t3 = thickness
        sec_2.t4 = thickness

        # Define bar part
        part_1 = kwd.Part()
        part_1.parts = pd.DataFrame({"pid": [1], "mid": [mat_1.mid], "secid": [sec_1.secid]})

        # Define plate part
        part_2 = kwd.Part()
        part_2.parts = pd.DataFrame({"pid": [2], "mid": [mat_2.mid], "secid": [sec_2.secid]})

        # Define coordinate system
        cs_1 = kwd.DefineCoordinateSystem(cid=1)
        cs_1.xl = 1.0
        cs_1.yp = 1.0

        # Define initial velocity
        init_vel = kwd.InitialVelocityGeneration()
        init_vel.id = part_1.parts["pid"][0]
        init_vel.styp = 2
        init_vel.vy = initial_velocity
        init_vel.icid = cs_1.cid

        # Define box for node set
        box_1 = kwd.DefineBox(boxid=1, xmn=-500, xmx=500, ymn=39.0, ymx=40.1, zmn=-500, zmx=500)

        # Create node set
        set_node_1 = kwd.SetNodeGeneral()
        set_node_1.sid = 1
        set_node_1.option = "BOX"
        set_node_1.e1 = box_1.boxid

        # Define boxes for boundary conditions
        box_plate_zN = kwd.DefineBox(boxid=2, xmn=-0.1, xmx=10.1, ymn=41.0, ymx=43.0, zmn=-10.1, zmx=-9.9)
        box_plate_zP = kwd.DefineBox(boxid=3, xmn=0.1, xmx=9.9, ymn=41.0, ymx=43.0, zmn=-0.1, zmx=0.1)
        box_plate_xP = kwd.DefineBox(boxid=4, xmn=9.9, xmx=10.1, ymn=41.0, ymx=43.0, zmn=-10.1, zmx=0.1)
        box_plate_xN = kwd.DefineBox(boxid=5, xmn=-0.1, xmx=0.1, ymn=41.0, ymx=43.0, zmn=-9.9, zmx=-0.1)

        # Create node set for fixed BC
        set_node_Fixed = kwd.SetNodeGeneral()
        set_node_Fixed.sid = 2
        set_node_Fixed.option = "BOX"
        set_node_Fixed.e1 = box_plate_zN.boxid
        set_node_Fixed.e2 = box_plate_xP.boxid

        # Define fixed Boundary Conditions
        fixed_bc = kwd.BoundarySpcSet(dofx=1, dofy=1, dofz=1, dofrx=1, dofry=1, dofrz=1)
        fixed_bc.nsid = set_node_Fixed.sid

        # Create node set for symmetric BC normal to Z Axis
        set_node_zNormal = kwd.SetNodeGeneral()
        set_node_zNormal.sid = 3
        set_node_zNormal.option = "BOX"
        set_node_zNormal.e1 = box_plate_zP.boxid

        # Define zNormal Boundary Conditions
        zNormal_bc = kwd.BoundarySpcSet(dofx=0, dofy=0, dofz=1, dofrx=1, dofry=1, dofrz=0)
        zNormal_bc.nsid = set_node_zNormal.sid

        # Create node set for symmetric BC normal to X Axis
        set_node_xNormal = kwd.SetNodeGeneral()
        set_node_xNormal.sid = 4
        set_node_xNormal.option = "BOX"
        set_node_xNormal.e1 = box_plate_xN.boxid

        # Define xNormal Boundary Conditions
        xNormal_bc = kwd.BoundarySpcSet(dofx=1, dofy=0, dofz=0, dofrx=0, dofry=1, dofrz=1)
        xNormal_bc.nsid = set_node_xNormal.sid

        # Define box for node set of plate
        box_plate = kwd.DefineBox(boxid=6, xmn=-1, xmx=11, ymn=39.0, ymx=40.1, zmn=-11, zmx=1)

        # Create node set for plate
        set_node_plate = kwd.SetNodeGeneral()
        set_node_plate.sid = 5
        set_node_plate.option = "BOX"
        set_node_plate.e1 = box_plate.boxid

        # Define contact
        contact = kwd.ContactAutomaticSingleSurface(surfa=0)
        contact.fs = 0.3

        # Define control termination
        control_term = kwd.ControlTermination(endtim=2.00000e-4, dtmin=0.001)

        # Define database cards
        deck_dt_out = 8.00000e-8
        deck_glstat = kwd.DatabaseGlstat(dt=deck_dt_out, binary=3)
        deck_matsum = kwd.DatabaseMatsum(dt=deck_dt_out, binary=3)
        deck_nodout = kwd.DatabaseNodout(dt=deck_dt_out, binary=3)
        deck_elout = kwd.DatabaseElout(dt=deck_dt_out, binary=3)
        deck_rwforc = kwd.DatabaseRwforc(dt=deck_dt_out, binary=3)
        deck_d3plot = kwd.DatabaseBinaryD3Plot(dt=4.00000e-6)

        # Define deck history node
        deck_hist_node_1 = kwd.DatabaseHistoryNodeSet()
        deck_hist_node_1.id1 = set_node_1.sid

        # Append all cards to input deck
        deck.extend(
            [
                deck_glstat,
                deck_matsum,
                deck_nodout,
                deck_elout,
                deck_rwforc,
                deck_d3plot,
                set_node_1,
                control_term,
                contact,
                box_1,
                box_plate_zN,
                box_plate_zP,
                box_plate_xP,
                box_plate_xN,
                box_plate,
                set_node_Fixed,
                set_node_zNormal,
                set_node_xNormal,
                set_node_plate,
                fixed_bc,
                zNormal_bc,
                xNormal_bc,
                init_vel,
                cs_1,
                part_1,
                mat_1,
                sec_1,
                part_2,
                mat_2,
                sec_2,
                deck_hist_node_1,
            ]
        )

        return deck


    def write_input_deck(**kwargs):
        thickness = kwargs.get("thickness")
        wd = kwargs.get("wd")
        if not all((thickness, wd)):
            raise Exception("Missing input!")
        deck = create_input_deck(thickness)
        # Import mesh
        deck.append(kwd.Include(filename=mesh_file_name))

        # Write LS-DYNA input deck
        os.makedirs(wd, exist_ok=True)
        deck.export_file(os.path.join(wd, "input.k"))
        shutil.copyfile(mesh_file, os.path.join(wd, mesh_file_name))









.. GENERATED FROM PYTHON SOURCE LINES 276-279

Define the Dyna solver function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 279-294

.. code-block:: Python



    def run_job(directory):
        run_dyna(
            "input.k",
            working_directory=directory,
            ncpu=2,
            memory=2,
            precision=Precision.SINGLE,
            mpi_option=MpiOption.MPP_INTEL_MPI,
            memory_unit=MemoryUnit.MB,
        )
        assert os.path.isfile(os.path.join(directory, "d3plot")), "No result file found"









.. GENERATED FROM PYTHON SOURCE LINES 295-298

Define the DPF output function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 298-340

.. code-block:: Python



    def get_plate_displacement(directory):
        ds = dpf.DataSources()
        result_file = os.path.join(directory, "d3plot")
        assert os.path.isfile(result_file)
        ds.set_result_file_path(result_file, "d3plot")
        model = dpf.Model(ds)

        # Create mesh operator
        mes_op = dpf.operators.mesh.mesh_provider()
        mes_op.inputs.data_sources.connect(ds)
        # Isolate Part 2
        mes_op.connect(25, [2])
        # Extract mesh
        part_mesh = mes_op.outputs.mesh()

        # Create scoping operator from mesh using from_mesh scoping operator
        part_mesh_op = dpf.operators.scoping.from_mesh()
        part_mesh_op.inputs.mesh.connect(part_mesh)
        part_scoping = part_mesh_op.outputs.scoping()

        # create displacement entity, apply part scoping
        disp = model.results.displacement
        disp.on_mesh_scoping(part_scoping)

        disp_op = disp.on_all_time_freqs()

        # Find min and max displacement
        min_max_op = ops.min_max.min_max_fc(ops.math.norm_fc(disp_op))

        min_displ = min_max_op.outputs.field_min()
        max_displ = min_max_op.outputs.field_max()

        max_disp_data = max_displ.data
        min_disp_data = min_displ.data

        tdata = model.metadata.time_freq_support.time_frequencies.data

        return tdata, max_disp_data, min_disp_data









.. GENERATED FROM PYTHON SOURCE LINES 341-344

Run solver iteratively until target displacement is reached
~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 344-370

.. code-block:: Python


    all_results = []

    for iteration in range(max_iterations):
        # Define thickness for this iteration
        thickness = initial_thickness + thickness_increment * iteration
        wd = os.path.join(workdir.name, f"thickness_{thickness:.4f}")
        pathlib.Path(wd).mkdir(exist_ok=True)
        # Create LS-Dyna input deck with new thickness
        write_input_deck(thickness=thickness, wd=wd)
        try:
            # Run solver
            run_job(wd)
            # Post-process displacement
            time_data, max_disp_data, min_disp_data = get_plate_displacement(wd)
            reduced_time_data = [t * 1000 for t in time_data]  # Convert to ms
            # Store result
            all_results.append({"thickness": thickness, "time": reduced_time_data, "max_disp": max_disp_data})
            # Check if target displacement is reached
            if max(max_disp_data) <= target_displacement:
                print(f"Target displacement reached at thickness {thickness:.4f}")
                break

        except Exception as e:
            print(f"Iteration {iteration} failed:", e)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:17:05  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : abe3b62b0b2f                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: abe3b62b0b2f-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29638

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:17:14

                                                                   10/31/25 18:17:14
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:17:14

     Performing Decomposition -- Phase 1                           10/31/25 18:17:14

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:17:14
     Performing Decomposition -- Phase 3                           10/31/25 18:17:14

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     2.356E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:17:14
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
     cpu time per zone cycle............       177 nanoseconds
     average cpu time per zone cycle....       763 nanoseconds
     average clock time per zone cycle..       849 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:14
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:15
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:15
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:15
        1882 t 7.1982E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:15
        1987 t 7.5998E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:15
        2091 t 7.9966E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:15
        2196 t 8.3974E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:15
        2301 t 8.7981E-05 dt 3.81E-08 write d3plot file            10/31/25 18:17:15
        2406 t 9.1980E-05 dt 3.80E-08 write d3plot file            10/31/25 18:17:15
        2512 t 9.5994E-05 dt 3.77E-08 write d3plot file            10/31/25 18:17:15
        2618 t 9.9972E-05 dt 3.73E-08 write d3plot file            10/31/25 18:17:15
        2726 t 1.0398E-04 dt 3.70E-08 write d3plot file            10/31/25 18:17:15
        2834 t 1.0797E-04 dt 3.68E-08 write d3plot file            10/31/25 18:17:15
        2944 t 1.1200E-04 dt 3.64E-08 write d3plot file            10/31/25 18:17:15
        3054 t 1.1597E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:15
        3166 t 1.1997E-04 dt 3.55E-08 write d3plot file            10/31/25 18:17:15
        3280 t 1.2399E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:15
        3394 t 1.2798E-04 dt 3.48E-08 write d3plot file            10/31/25 18:17:15
        3510 t 1.3200E-04 dt 3.44E-08 write d3plot file            10/31/25 18:17:15
        3626 t 1.3597E-04 dt 3.40E-08 write d3plot file            10/31/25 18:17:15
        3745 t 1.4000E-04 dt 3.37E-08 write d3plot file            10/31/25 18:17:15
        3864 t 1.4399E-04 dt 3.34E-08 write d3plot file            10/31/25 18:17:15
        3984 t 1.4799E-04 dt 3.31E-08 write d3plot file            10/31/25 18:17:15
        4105 t 1.5198E-04 dt 3.29E-08 write d3plot file            10/31/25 18:17:15
        4227 t 1.5597E-04 dt 3.26E-08 write d3plot file            10/31/25 18:17:15
        4350 t 1.5997E-04 dt 3.24E-08 write d3plot file            10/31/25 18:17:15
        4474 t 1.6399E-04 dt 3.23E-08 write d3plot file            10/31/25 18:17:15
        4598 t 1.6798E-04 dt 3.21E-08 write d3plot file            10/31/25 18:17:15
        4723 t 1.7199E-04 dt 3.21E-08 write d3plot file            10/31/25 18:17:15
        4848 t 1.7599E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:15
        4973 t 1.7999E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:15
        5000 t 1.8085E-04 dt 3.20E-08 flush i/o buffers            10/31/25 18:17:15
        5098 t 1.8399E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16
        5223 t 1.8798E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16
        5348 t 1.9198E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16
        5473 t 1.9598E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16
        5598 t 1.9998E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16
 
     *** termination time reached ***
        5598 t 2.0002E-04 dt 3.20E-08 write d3dump01 file          10/31/25 18:17:16
        5598 t 2.0002E-04 dt 3.20E-08 flush i/o buffers            10/31/25 18:17:16
        5598 t 2.0002E-04 dt 3.20E-08 write d3plot file            10/31/25 18:17:16

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:16

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1286K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1293K on processor     1
              Average   1283K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.4365E-02    0.24     1.4392E-02    0.14
        KW Reading ......... 3.2862E-03    0.05     3.2865E-03    0.03
        KW Writing ......... 8.7964E-04    0.01     8.7950E-04    0.01
      MPP Decomposition .... 1.9937E-02    0.33     2.0863E-02    0.20
        Init Proc .......... 1.0828E-02    0.18     1.1467E-02    0.11
        Decomposition ...... 1.8529E-03    0.03     1.8525E-03    0.02
        Translation ........ 7.2264E-03    0.12     7.5125E-03    0.07
      Initialization ....... 4.3810E+00   73.01     8.6818E+00   84.25
        Init Proc Phase 1 .. 7.1976E-03    0.12     7.6715E-03    0.07
        Init Proc Phase 2 .. 2.1184E-03    0.04     2.7745E-03    0.03
      Init solver .......... 2.8101E-04    0.00     2.8150E-04    0.00
      Element processing ... 4.8823E-01    8.14     4.8794E-01    4.74
        Solids ............. 3.3293E-01    5.55     3.3187E-01    3.22
        Shells ............. 9.5026E-02    1.58     9.5019E-02    0.92
        E Other ............ 1.6921E-02    0.28     1.7000E-02    0.16
      Binary databases ..... 7.0453E-02    1.17     7.0771E-02    0.69
      ASCII database ....... 4.4611E-01    7.43     4.4519E-01    4.32
      Contact algorithm .... 2.2037E-01    3.67     2.2033E-01    2.14
        Interf. ID         1 1.5847E-01    2.64     1.5817E-01    1.53
      Rigid Bodies ......... 9.4409E-03    0.16     9.3655E-03    0.09
      Time step size ....... 3.8822E-02    0.65     3.8695E-02    0.38
      Group force file ..... 4.9140E-03    0.08     5.3050E-03    0.05
      Others ............... 5.5765E-02    0.93     5.5868E-02    0.54
        Force Sharing ...... 3.2556E-02    0.54     3.2397E-02    0.31
      Misc. 1 .............. 1.4452E-01    2.41     1.4733E-01    1.43
        Scale Masses ....... 4.2028E-03    0.07     4.2635E-03    0.04
        Force Constraints .. 4.2766E-03    0.07     4.2900E-03    0.04
        Force to Accel ..... 1.2255E-02    0.20     1.2274E-02    0.12
        Constraint Sharing . 4.6233E-03    0.08     4.6630E-03    0.05
        Update RB nodes .... 4.6788E-03    0.08     4.7275E-03    0.05
      Misc. 2 .............. 2.9448E-02    0.49     2.9024E-02    0.28
      Misc. 3 .............. 5.0616E-02    0.84     5.1322E-02    0.50
      Misc. 4 .............. 2.6090E-02    0.43     2.6382E-02    0.26
        Timestep Init ...... 7.9025E-03    0.13     7.8550E-03    0.08
        Apply Loads ........ 9.2083E-03    0.15     9.1380E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            6.0004E+00  100.00     1.0305E+01  100.00

     Problem time       =    2.0002E-04
     Problem cycle      =      5598
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1026.609 nanoseconds
     Clock time per zone cycle=        276.989 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   abe3b62b0b2f                              0.28571   1.7200E+00
      #       1   abe3b62b0b2f                              1.71429   1.0320E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.2040E+01


     Start time   10/31/2025 18:17:14  
     End time     10/31/2025 18:17:16  
     Elapsed time       2 seconds for    5598 cycles using     2 MPP procs
                 (      0 hour   0 minute   2 seconds)

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:16
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:17:21  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : c4cabb80f8eb                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: c4cabb80f8eb-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29630

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:17:30

                                                                   10/31/25 18:17:30
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:17:30

     Performing Decomposition -- Phase 1                           10/31/25 18:17:30

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:17:30
     Performing Decomposition -- Phase 3                           10/31/25 18:17:30

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     2.886E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:17:30
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
     cpu time per zone cycle............       231 nanoseconds
     average cpu time per zone cycle....       866 nanoseconds
     average clock time per zone cycle..       972 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        13 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         5 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:30
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1882 t 7.1982E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:31
        1987 t 7.5996E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:31
        2091 t 7.9965E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:31
        2196 t 8.3973E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:31
        2301 t 8.7979E-05 dt 3.81E-08 write d3plot file            10/31/25 18:17:31
        2406 t 9.1976E-05 dt 3.79E-08 write d3plot file            10/31/25 18:17:31
        2512 t 9.5984E-05 dt 3.77E-08 write d3plot file            10/31/25 18:17:31
        2619 t 9.9999E-05 dt 3.74E-08 write d3plot file            10/31/25 18:17:31
        2726 t 1.0399E-04 dt 3.72E-08 write d3plot file            10/31/25 18:17:31
        2834 t 1.0799E-04 dt 3.68E-08 write d3plot file            10/31/25 18:17:31
        2943 t 1.1198E-04 dt 3.64E-08 write d3plot file            10/31/25 18:17:31
        3054 t 1.1600E-04 dt 3.60E-08 write d3plot file            10/31/25 18:17:31
        3165 t 1.1998E-04 dt 3.57E-08 write d3plot file            10/31/25 18:17:31
        3277 t 1.2397E-04 dt 3.55E-08 write d3plot file            10/31/25 18:17:31
        3391 t 1.2800E-04 dt 3.52E-08 write d3plot file            10/31/25 18:17:31
        3505 t 1.3199E-04 dt 3.48E-08 write d3plot file            10/31/25 18:17:31
        3620 t 1.3598E-04 dt 3.46E-08 write d3plot file            10/31/25 18:17:31
        3736 t 1.3998E-04 dt 3.44E-08 write d3plot file            10/31/25 18:17:31
        3853 t 1.4399E-04 dt 3.42E-08 write d3plot file            10/31/25 18:17:31
        3970 t 1.4799E-04 dt 3.41E-08 write d3plot file            10/31/25 18:17:31
        4087 t 1.5197E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:31
        4205 t 1.5597E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:31
        4324 t 1.6000E-04 dt 3.38E-08 write d3plot file            10/31/25 18:17:31
        4442 t 1.6399E-04 dt 3.38E-08 write d3plot file            10/31/25 18:17:31
        4560 t 1.6798E-04 dt 3.38E-08 write d3plot file            10/31/25 18:17:32
        4678 t 1.7198E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        4796 t 1.7597E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        4914 t 1.7997E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        5000 t 1.8289E-04 dt 3.39E-08 flush i/o buffers            10/31/25 18:17:32
        5032 t 1.8397E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        5150 t 1.8798E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        5268 t 1.9198E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        5386 t 1.9598E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
        5504 t 1.9999E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32
 
     *** termination time reached ***
        5504 t 2.0002E-04 dt 3.39E-08 write d3dump01 file          10/31/25 18:17:32
        5504 t 2.0002E-04 dt 3.39E-08 flush i/o buffers            10/31/25 18:17:32
        5504 t 2.0002E-04 dt 3.39E-08 write d3plot file            10/31/25 18:17:32

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:32

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1288K on processor     1
              Average   1276K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1296K on processor     1
              Average   1284K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.4911E-02    0.25     1.4945E-02    0.14
        KW Reading ......... 3.2619E-03    0.05     3.2620E-03    0.03
        KW Writing ......... 8.7570E-04    0.01     8.7550E-04    0.01
      MPP Decomposition .... 2.0630E-02    0.34     2.1481E-02    0.21
        Init Proc .......... 1.0863E-02    0.18     1.1429E-02    0.11
        Decomposition ...... 2.5614E-03    0.04     2.5695E-03    0.02
        Translation ........ 7.1689E-03    0.12     7.4435E-03    0.07
      Initialization ....... 4.4205E+00   73.17     8.7584E+00   84.35
        Init Proc Phase 1 .. 7.2045E-03    0.12     7.7515E-03    0.07
        Init Proc Phase 2 .. 2.3527E-03    0.04     3.4200E-03    0.03
      Init solver .......... 3.1377E-04    0.01     3.1450E-04    0.00
      Element processing ... 4.8062E-01    7.96     4.8040E-01    4.63
        Solids ............. 3.2993E-01    5.46     3.2898E-01    3.17
        Shells ............. 9.1385E-02    1.51     9.1362E-02    0.88
        E Other ............ 1.6684E-02    0.28     1.6780E-02    0.16
      Binary databases ..... 7.2240E-02    1.20     7.2416E-02    0.70
      ASCII database ....... 4.4998E-01    7.45     4.4914E-01    4.33
      Contact algorithm .... 2.2100E-01    3.66     2.2109E-01    2.13
        Interf. ID         1 1.6052E-01    2.66     1.6017E-01    1.54
      Rigid Bodies ......... 9.4400E-03    0.16     9.3710E-03    0.09
      Time step size ....... 3.9850E-02    0.66     3.9650E-02    0.38
      Group force file ..... 4.8883E-03    0.08     5.2395E-03    0.05
      Others ............... 5.4643E-02    0.90     5.4622E-02    0.53
        Force Sharing ...... 3.1785E-02    0.53     3.1660E-02    0.30
      Misc. 1 .............. 1.4462E-01    2.39     1.4761E-01    1.42
        Scale Masses ....... 4.1728E-03    0.07     4.1680E-03    0.04
        Force Constraints .. 4.2382E-03    0.07     4.2560E-03    0.04
        Force to Accel ..... 1.2100E-02    0.20     1.1986E-02    0.12
        Constraint Sharing . 4.5787E-03    0.08     4.6410E-03    0.04
        Update RB nodes .... 4.6297E-03    0.08     4.6320E-03    0.04
      Misc. 2 .............. 2.9645E-02    0.49     2.9330E-02    0.28
      Misc. 3 .............. 5.1900E-02    0.86     5.2534E-02    0.51
      Misc. 4 .............. 2.6166E-02    0.43     2.6438E-02    0.25
        Timestep Init ...... 7.9475E-03    0.13     7.9155E-03    0.08
        Apply Loads ........ 9.2987E-03    0.15     9.2630E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            6.0414E+00  100.00     1.0383E+01  100.00

     Problem time       =    2.0002E-04
     Problem cycle      =      5504
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1050.709 nanoseconds
     Clock time per zone cycle=        281.781 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   c4cabb80f8eb                              0.28383   1.7200E+00
      #       1   c4cabb80f8eb                              1.71617   1.0400E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.2120E+01


     Start time   10/31/2025 18:17:30  
     End time     10/31/2025 18:17:32  
     Elapsed time       2 seconds for    5504 cycles using     2 MPP procs
                 (      0 hour   0 minute   2 seconds)

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:32
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:17:33  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : 71d3559bdba1                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: 71d3559bdba1-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29632

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:17:42

                                                                   10/31/25 18:17:42
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:17:42

     Performing Decomposition -- Phase 1                           10/31/25 18:17:42

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:17:42
     Performing Decomposition -- Phase 3                           10/31/25 18:17:42

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     3.332E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:17:42
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
     cpu time per zone cycle............       183 nanoseconds
     average cpu time per zone cycle....       788 nanoseconds
     average clock time per zone cycle..       895 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:42
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1882 t 7.1982E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:43
        1987 t 7.5995E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:43
        2091 t 7.9966E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:43
        2196 t 8.3975E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:43
        2301 t 8.7980E-05 dt 3.81E-08 write d3plot file            10/31/25 18:17:43
        2406 t 9.1972E-05 dt 3.79E-08 write d3plot file            10/31/25 18:17:43
        2512 t 9.5985E-05 dt 3.78E-08 write d3plot file            10/31/25 18:17:43
        2618 t 9.9977E-05 dt 3.76E-08 write d3plot file            10/31/25 18:17:43
        2725 t 1.0398E-04 dt 3.72E-08 write d3plot file            10/31/25 18:17:43
        2833 t 1.0798E-04 dt 3.69E-08 write d3plot file            10/31/25 18:17:43
        2942 t 1.1198E-04 dt 3.66E-08 write d3plot file            10/31/25 18:17:43
        3052 t 1.1599E-04 dt 3.63E-08 write d3plot file            10/31/25 18:17:43
        3162 t 1.1997E-04 dt 3.61E-08 write d3plot file            10/31/25 18:17:43
        3274 t 1.2400E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:43
        3386 t 1.2799E-04 dt 3.55E-08 write d3plot file            10/31/25 18:17:43
        3499 t 1.3200E-04 dt 3.53E-08 write d3plot file            10/31/25 18:17:43
        3612 t 1.3598E-04 dt 3.52E-08 write d3plot file            10/31/25 18:17:43
        3726 t 1.3999E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:43
        3840 t 1.4399E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        3954 t 1.4798E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4069 t 1.5200E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4183 t 1.5599E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4297 t 1.5997E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4412 t 1.6400E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4526 t 1.6799E-04 dt 3.50E-08 write d3plot file            10/31/25 18:17:43
        4640 t 1.7199E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:43
        4754 t 1.7599E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:43
        4868 t 1.7998E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
        4982 t 1.8398E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
        5000 t 1.8461E-04 dt 3.51E-08 flush i/o buffers            10/31/25 18:17:44
        5096 t 1.8798E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
        5210 t 1.9198E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
        5324 t 1.9598E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
        5438 t 1.9997E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44
 
     *** termination time reached ***
        5438 t 2.0001E-04 dt 3.51E-08 write d3dump01 file          10/31/25 18:17:44
        5438 t 2.0001E-04 dt 3.51E-08 flush i/o buffers            10/31/25 18:17:44
        5438 t 2.0001E-04 dt 3.51E-08 write d3plot file            10/31/25 18:17:44

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:44

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1273K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1291K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.4043E-02    0.24     1.4094E-02    0.14
        KW Reading ......... 3.2232E-03    0.05     3.2235E-03    0.03
        KW Writing ......... 8.6868E-04    0.01     8.6900E-04    0.01
      MPP Decomposition .... 1.9346E-02    0.32     2.0101E-02    0.20
        Init Proc .......... 1.0481E-02    0.18     1.0971E-02    0.11
        Decomposition ...... 1.8679E-03    0.03     1.8695E-03    0.02
        Translation ........ 6.9672E-03    0.12     7.2295E-03    0.07
      Initialization ....... 4.3867E+00   73.41     8.6922E+00   84.52
        Init Proc Phase 1 .. 7.0194E-03    0.12     7.4165E-03    0.07
        Init Proc Phase 2 .. 2.1317E-03    0.04     2.6535E-03    0.03
      Init solver .......... 2.7329E-04    0.00     2.7400E-04    0.00
      Element processing ... 4.7004E-01    7.87     4.6985E-01    4.57
        Solids ............. 3.2278E-01    5.40     3.2175E-01    3.13
        Shells ............. 8.8742E-02    1.49     8.8698E-02    0.86
        E Other ............ 1.6343E-02    0.27     1.6507E-02    0.16
      Binary databases ..... 6.7416E-02    1.13     6.7659E-02    0.66
      ASCII database ....... 4.4615E-01    7.47     4.4535E-01    4.33
      Contact algorithm .... 2.2382E-01    3.75     2.2384E-01    2.18
        Interf. ID         1 1.6371E-01    2.74     1.6341E-01    1.59
      Rigid Bodies ......... 9.1689E-03    0.15     9.0710E-03    0.09
      Time step size ....... 3.5779E-02    0.60     3.5673E-02    0.35
      Group force file ..... 4.7921E-03    0.08     5.1435E-03    0.05
      Others ............... 5.3626E-02    0.90     5.3602E-02    0.52
        Force Sharing ...... 3.1620E-02    0.53     3.1505E-02    0.31
      Misc. 1 .............. 1.4221E-01    2.38     1.4504E-01    1.41
        Scale Masses ....... 4.0829E-03    0.07     4.1325E-03    0.04
        Force Constraints .. 4.1236E-03    0.07     4.1150E-03    0.04
        Force to Accel ..... 1.1917E-02    0.20     1.1862E-02    0.12
        Constraint Sharing . 4.4011E-03    0.07     4.4205E-03    0.04
        Update RB nodes .... 4.5276E-03    0.08     4.5675E-03    0.04
      Misc. 2 .............. 2.9073E-02    0.49     2.8722E-02    0.28
      Misc. 3 .............. 4.7670E-02    0.80     4.8257E-02    0.47
      Misc. 4 .............. 2.5271E-02    0.42     2.5524E-02    0.25
        Timestep Init ...... 7.6584E-03    0.13     7.6075E-03    0.07
        Apply Loads ........ 9.0786E-03    0.15     9.0190E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            5.9754E+00  100.00     1.0284E+01  100.00

     Problem time       =    2.0001E-04
     Problem cycle      =      5438
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1052.351 nanoseconds
     Clock time per zone cycle=        279.788 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   71d3559bdba1                              0.28190   1.6900E+00
      #       1   71d3559bdba1                              1.71810   1.0300E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.1990E+01


     Start time   10/31/2025 18:17:42  
     End time     10/31/2025 18:17:44  
     Elapsed time       2 seconds for    5438 cycles using     2 MPP procs
                 (      0 hour   0 minute   2 seconds)

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:44
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:17:46  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : eb05119981a1                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: eb05119981a1-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29628

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:17:55

                                                                   10/31/25 18:17:55
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:17:55

     Performing Decomposition -- Phase 1                           10/31/25 18:17:55

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:17:55
     Performing Decomposition -- Phase 3                           10/31/25 18:17:55

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     3.725E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:17:55
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
     cpu time per zone cycle............       174 nanoseconds
     average cpu time per zone cycle....       792 nanoseconds
     average clock time per zone cycle..       882 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:17:55
        1882 t 7.1981E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:55
        1987 t 7.5994E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:56
        2091 t 7.9966E-05 dt 3.82E-08 write d3plot file            10/31/25 18:17:56
        2196 t 8.3974E-05 dt 3.81E-08 write d3plot file            10/31/25 18:17:56
        2301 t 8.7971E-05 dt 3.80E-08 write d3plot file            10/31/25 18:17:56
        2407 t 9.2000E-05 dt 3.80E-08 write d3plot file            10/31/25 18:17:56
        2512 t 9.5981E-05 dt 3.78E-08 write d3plot file            10/31/25 18:17:56
        2618 t 9.9980E-05 dt 3.76E-08 write d3plot file            10/31/25 18:17:56
        2725 t 1.0399E-04 dt 3.73E-08 write d3plot file            10/31/25 18:17:56
        2833 t 1.0800E-04 dt 3.70E-08 write d3plot file            10/31/25 18:17:56
        2941 t 1.1199E-04 dt 3.68E-08 write d3plot file            10/31/25 18:17:56
        3050 t 1.1599E-04 dt 3.66E-08 write d3plot file            10/31/25 18:17:56
        3160 t 1.1999E-04 dt 3.63E-08 write d3plot file            10/31/25 18:17:56
        3270 t 1.2398E-04 dt 3.61E-08 write d3plot file            10/31/25 18:17:56
        3381 t 1.2798E-04 dt 3.60E-08 write d3plot file            10/31/25 18:17:56
        3492 t 1.3197E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        3604 t 1.3599E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:56
        3716 t 1.4000E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:56
        3827 t 1.4397E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:56
        3939 t 1.4798E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:56
        4051 t 1.5200E-04 dt 3.58E-08 write d3plot file            10/31/25 18:17:56
        4162 t 1.5597E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4274 t 1.5999E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4385 t 1.6398E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4497 t 1.6800E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4608 t 1.7199E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4719 t 1.7597E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4831 t 1.8000E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        4942 t 1.8398E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        5000 t 1.8607E-04 dt 3.59E-08 flush i/o buffers            10/31/25 18:17:56
        5053 t 1.8797E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        5165 t 1.9199E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        5276 t 1.9598E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
        5387 t 1.9996E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56
 
     *** termination time reached ***
        5387 t 2.0000E-04 dt 3.59E-08 write d3dump01 file          10/31/25 18:17:56
        5387 t 2.0000E-04 dt 3.59E-08 flush i/o buffers            10/31/25 18:17:56
        5387 t 2.0000E-04 dt 3.59E-08 write d3plot file            10/31/25 18:17:56

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:56

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1292K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.3088E-02    0.22     1.3115E-02    0.13
        KW Reading ......... 2.9160E-03    0.05     2.9160E-03    0.03
        KW Writing ......... 8.7074E-04    0.01     8.7050E-04    0.01
      MPP Decomposition .... 1.9414E-02    0.33     2.0087E-02    0.20
        Init Proc .......... 1.0533E-02    0.18     1.1014E-02    0.11
        Decomposition ...... 1.8767E-03    0.03     1.8765E-03    0.02
        Translation ........ 6.9762E-03    0.12     7.1680E-03    0.07
      Initialization ....... 4.3443E+00   73.52     8.6077E+00   84.59
        Init Proc Phase 1 .. 7.2280E-03    0.12     7.7595E-03    0.08
        Init Proc Phase 2 .. 2.1768E-03    0.04     2.7655E-03    0.03
      Init solver .......... 3.4409E-04    0.01     3.3300E-04    0.00
      Element processing ... 4.6095E-01    7.80     4.6078E-01    4.53
        Solids ............. 3.1730E-01    5.37     3.1632E-01    3.11
        Shells ............. 8.6246E-02    1.46     8.6253E-02    0.85
        E Other ............ 1.5845E-02    0.27     1.6027E-02    0.16
      Binary databases ..... 6.7397E-02    1.14     6.7586E-02    0.66
      ASCII database ....... 4.4130E-01    7.47     4.4049E-01    4.33
      Contact algorithm .... 2.2362E-01    3.78     2.2362E-01    2.20
        Interf. ID         1 1.6497E-01    2.79     1.6470E-01    1.62
      Rigid Bodies ......... 9.0903E-03    0.15     8.9690E-03    0.09
      Time step size ....... 3.2364E-02    0.55     3.2267E-02    0.32
      Group force file ..... 4.7637E-03    0.08     5.0195E-03    0.05
      Others ............... 5.2440E-02    0.89     5.2486E-02    0.52
        Force Sharing ...... 3.0532E-02    0.52     3.0404E-02    0.30
      Misc. 1 .............. 1.4035E-01    2.38     1.4322E-01    1.41
        Scale Masses ....... 4.0081E-03    0.07     4.0745E-03    0.04
        Force Constraints .. 4.0823E-03    0.07     4.0885E-03    0.04
        Force to Accel ..... 1.1683E-02    0.20     1.1669E-02    0.11
        Constraint Sharing . 4.4080E-03    0.07     4.4310E-03    0.04
        Update RB nodes .... 4.5262E-03    0.08     4.5455E-03    0.04
      Misc. 2 .............. 2.8329E-02    0.48     2.8009E-02    0.28
      Misc. 3 .............. 4.6628E-02    0.79     4.7395E-02    0.47
      Misc. 4 .............. 2.4776E-02    0.42     2.5038E-02    0.25
        Timestep Init ...... 7.6477E-03    0.13     7.5765E-03    0.07
        Apply Loads ........ 8.5736E-03    0.15     8.5875E-03    0.08
      ----------------------------------------------------------------
      T o t a l s            5.9091E+00  100.00     1.0176E+01  100.00

     Problem time       =    2.0000E-04
     Problem cycle      =      5387
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1050.448 nanoseconds
     Clock time per zone cycle=        278.305 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   eb05119981a1                              0.28017   1.6600E+00
      #       1   eb05119981a1                              1.71983   1.0190E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.1850E+01


     Start time   10/31/2025 18:17:55  
     End time     10/31/2025 18:17:56  
     Elapsed time       1 second  for    5387 cycles using     2 MPP procs
                 (      0 hour   0 minute   1 second )

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:17:56
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:17:58  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : 5ee2e10c68f0                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: 5ee2e10c68f0-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29613

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:18:07

                                                                   10/31/25 18:18:07
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:18:07

     Performing Decomposition -- Phase 1                           10/31/25 18:18:07

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:18:07
     Performing Decomposition -- Phase 3                           10/31/25 18:18:07

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     4.081E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:18:07
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
     cpu time per zone cycle............       172 nanoseconds
     average cpu time per zone cycle....       803 nanoseconds
     average clock time per zone cycle..       901 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:07
        1882 t 7.1981E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:07
        1987 t 7.5995E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:07
        2091 t 7.9969E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:07
        2196 t 8.3974E-05 dt 3.81E-08 write d3plot file            10/31/25 18:18:07
        2301 t 8.7965E-05 dt 3.80E-08 write d3plot file            10/31/25 18:18:08
        2407 t 9.1991E-05 dt 3.80E-08 write d3plot file            10/31/25 18:18:08
        2512 t 9.5973E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:08
        2618 t 9.9980E-05 dt 3.77E-08 write d3plot file            10/31/25 18:18:08
        2724 t 1.0397E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:08
        2831 t 1.0796E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:08
        2939 t 1.1198E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:08
        3047 t 1.1597E-04 dt 3.69E-08 write d3plot file            10/31/25 18:18:08
        3156 t 1.1999E-04 dt 3.67E-08 write d3plot file            10/31/25 18:18:08
        3265 t 1.2398E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        3375 t 1.2800E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        3484 t 1.3198E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        3594 t 1.3598E-04 dt 3.64E-08 write d3plot file            10/31/25 18:18:08
        3704 t 1.3999E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        3813 t 1.4397E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        3923 t 1.4798E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        4033 t 1.5200E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        4142 t 1.5598E-04 dt 3.65E-08 write d3plot file            10/31/25 18:18:08
        4252 t 1.6000E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4361 t 1.6399E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4470 t 1.6797E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4580 t 1.7199E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4689 t 1.7598E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4798 t 1.7996E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        4908 t 1.8399E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        5000 t 1.8735E-04 dt 3.66E-08 flush i/o buffers            10/31/25 18:18:08
        5017 t 1.8797E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        5127 t 1.9199E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        5236 t 1.9598E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
        5345 t 1.9997E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08
 
     *** termination time reached ***
        5345 t 2.0000E-04 dt 3.66E-08 write d3dump01 file          10/31/25 18:18:08
        5345 t 2.0000E-04 dt 3.66E-08 flush i/o buffers            10/31/25 18:18:08
        5345 t 2.0000E-04 dt 3.66E-08 write d3plot file            10/31/25 18:18:08

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:08

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1292K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.4022E-02    0.24     1.4050E-02    0.14
        KW Reading ......... 3.2530E-03    0.05     3.2535E-03    0.03
        KW Writing ......... 8.7682E-04    0.01     8.7700E-04    0.01
      MPP Decomposition .... 1.9442E-02    0.33     2.0164E-02    0.20
        Init Proc .......... 1.0573E-02    0.18     1.1095E-02    0.11
        Decomposition ...... 1.8895E-03    0.03     1.8895E-03    0.02
        Translation ........ 6.9518E-03    0.12     7.1520E-03    0.07
      Initialization ....... 4.4042E+00   73.82     8.7265E+00   84.79
        Init Proc Phase 1 .. 7.0417E-03    0.12     7.5690E-03    0.07
        Init Proc Phase 2 .. 2.2563E-03    0.04     2.9705E-03    0.03
      Init solver .......... 3.1537E-04    0.01     3.1550E-04    0.00
      Element processing ... 4.5691E-01    7.66     4.5675E-01    4.44
        Solids ............. 3.1545E-01    5.29     3.1454E-01    3.06
        Shells ............. 8.4497E-02    1.42     8.4544E-02    0.82
        E Other ............ 1.6011E-02    0.27     1.6119E-02    0.16
      Binary databases ..... 6.7892E-02    1.14     6.8050E-02    0.66
      ASCII database ....... 4.4523E-01    7.46     4.4436E-01    4.32
      Contact algorithm .... 2.1945E-01    3.68     2.1950E-01    2.13
        Interf. ID         1 1.6117E-01    2.70     1.6094E-01    1.56
      Rigid Bodies ......... 8.9983E-03    0.15     8.8925E-03    0.09
      Time step size ....... 3.1953E-02    0.54     3.1773E-02    0.31
      Group force file ..... 4.6591E-03    0.08     4.9880E-03    0.05
      Others ............... 5.1850E-02    0.87     5.1957E-02    0.50
        Force Sharing ...... 3.0057E-02    0.50     2.9948E-02    0.29
      Misc. 1 .............. 1.4055E-01    2.36     1.4349E-01    1.39
        Scale Masses ....... 3.9800E-03    0.07     4.0100E-03    0.04
        Force Constraints .. 4.0276E-03    0.07     4.0060E-03    0.04
        Force to Accel ..... 1.1635E-02    0.20     1.1562E-02    0.11
        Constraint Sharing . 4.4041E-03    0.07     4.4355E-03    0.04
        Update RB nodes .... 4.5265E-03    0.08     4.5595E-03    0.04
      Misc. 2 .............. 2.8334E-02    0.47     2.8017E-02    0.27
      Misc. 3 .............. 4.7112E-02    0.79     4.7811E-02    0.46
      Misc. 4 .............. 2.4953E-02    0.42     2.5135E-02    0.24
        Timestep Init ...... 7.5939E-03    0.13     7.4650E-03    0.07
        Apply Loads ........ 8.8417E-03    0.15     8.7970E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            5.9658E+00  100.00     1.0292E+01  100.00

     Problem time       =    2.0000E-04
     Problem cycle      =      5345
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1068.730 nanoseconds
     Clock time per zone cycle=        279.729 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   5ee2e10c68f0                              0.27759   1.6600E+00
      #       1   5ee2e10c68f0                              1.72241   1.0300E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.1960E+01


     Start time   10/31/2025 18:18:07  
     End time     10/31/2025 18:18:08  
     Elapsed time       1 second  for    5345 cycles using     2 MPP procs
                 (      0 hour   0 minute   1 second )

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:08
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:18:10  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : ef37ab63a7fe                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: ef37ab63a7fe-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29616

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:18:19

                                                                   10/31/25 18:18:19
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:18:19

     Performing Decomposition -- Phase 1                           10/31/25 18:18:19

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:18:19
     Performing Decomposition -- Phase 3                           10/31/25 18:18:19

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     4.408E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:18:19
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
     cpu time per zone cycle............       172 nanoseconds
     average cpu time per zone cycle....       782 nanoseconds
     average clock time per zone cycle..       868 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1882 t 7.1981E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:19
        1987 t 7.5996E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:19
        2091 t 7.9970E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:19
        2196 t 8.3970E-05 dt 3.80E-08 write d3plot file            10/31/25 18:18:19
        2302 t 8.7993E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:19
        2407 t 9.1975E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:19
        2513 t 9.5990E-05 dt 3.78E-08 write d3plot file            10/31/25 18:18:19
        2619 t 9.9998E-05 dt 3.78E-08 write d3plot file            10/31/25 18:18:19
        2725 t 1.0400E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:19
        2831 t 1.0798E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:19
        2938 t 1.1198E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:19
        3045 t 1.1596E-04 dt 3.72E-08 write d3plot file            10/31/25 18:18:20
        3153 t 1.1997E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3261 t 1.2397E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3370 t 1.2800E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3478 t 1.3199E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3586 t 1.3598E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3694 t 1.3998E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3802 t 1.4397E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        3910 t 1.4797E-04 dt 3.70E-08 write d3plot file            10/31/25 18:18:20
        4018 t 1.5197E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4126 t 1.5597E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4234 t 1.5998E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4342 t 1.6399E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4450 t 1.6799E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4558 t 1.7199E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4666 t 1.7600E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4773 t 1.7997E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4881 t 1.8397E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        4989 t 1.8797E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        5000 t 1.8838E-04 dt 3.71E-08 flush i/o buffers            10/31/25 18:18:20
        5097 t 1.9198E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        5205 t 1.9598E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
        5313 t 1.9999E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20
 
     *** termination time reached ***
        5313 t 2.0003E-04 dt 3.71E-08 write d3dump01 file          10/31/25 18:18:20
        5313 t 2.0003E-04 dt 3.71E-08 flush i/o buffers            10/31/25 18:18:20
        5313 t 2.0003E-04 dt 3.71E-08 write d3plot file            10/31/25 18:18:20

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:20

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1292K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.3222E-02    0.22     1.3250E-02    0.13
        KW Reading ......... 2.9690E-03    0.05     2.9690E-03    0.03
        KW Writing ......... 8.7909E-04    0.01     8.7900E-04    0.01
      MPP Decomposition .... 1.9568E-02    0.33     2.0319E-02    0.20
        Init Proc .......... 1.0581E-02    0.18     1.1115E-02    0.11
        Decomposition ...... 1.9605E-03    0.03     1.9525E-03    0.02
        Translation ........ 6.9990E-03    0.12     7.2235E-03    0.07
      Initialization ....... 4.3441E+00   73.63     8.6078E+00   84.66
        Init Proc Phase 1 .. 7.1239E-03    0.12     7.5235E-03    0.07
        Init Proc Phase 2 .. 2.1136E-03    0.04     2.7220E-03    0.03
      Init solver .......... 2.7332E-04    0.00     2.7350E-04    0.00
      Element processing ... 4.5546E-01    7.72     4.5519E-01    4.48
        Solids ............. 3.1496E-01    5.34     3.1407E-01    3.09
        Shells ............. 8.3198E-02    1.41     8.3141E-02    0.82
        E Other ............ 1.5921E-02    0.27     1.6014E-02    0.16
      Binary databases ..... 6.6939E-02    1.13     6.7162E-02    0.66
      ASCII database ....... 4.4554E-01    7.55     4.4473E-01    4.37
      Contact algorithm .... 2.1760E-01    3.69     2.1753E-01    2.14
        Interf. ID         1 1.5921E-01    2.70     1.5892E-01    1.56
      Rigid Bodies ......... 9.0537E-03    0.15     8.9650E-03    0.09
      Time step size ....... 3.1139E-02    0.53     3.1006E-02    0.30
      Group force file ..... 4.6039E-03    0.08     4.9850E-03    0.05
      Others ............... 5.1357E-02    0.87     5.1428E-02    0.51
        Force Sharing ...... 2.9707E-02    0.50     2.9563E-02    0.29
      Misc. 1 .............. 1.4073E-01    2.39     1.4364E-01    1.41
        Scale Masses ....... 3.9825E-03    0.07     4.0400E-03    0.04
        Force Constraints .. 4.0484E-03    0.07     4.0305E-03    0.04
        Force to Accel ..... 1.1459E-02    0.19     1.1406E-02    0.11
        Constraint Sharing . 4.4007E-03    0.07     4.4585E-03    0.04
        Update RB nodes .... 4.4618E-03    0.08     4.4950E-03    0.04
      Misc. 2 .............. 2.7774E-02    0.47     2.7391E-02    0.27
      Misc. 3 .............. 4.7490E-02    0.80     4.8183E-02    0.47
      Misc. 4 .............. 2.4779E-02    0.42     2.5104E-02    0.25
        Timestep Init ...... 7.4820E-03    0.13     7.4345E-03    0.07
        Apply Loads ........ 8.7870E-03    0.15     8.7465E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            5.8996E+00  100.00     1.0167E+01  100.00

     Problem time       =    2.0003E-04
     Problem cycle      =      5313
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1063.424 nanoseconds
     Clock time per zone cycle=        280.412 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   ef37ab63a7fe                              0.27872   1.6500E+00
      #       1   ef37ab63a7fe                              1.72128   1.0190E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.1840E+01


     Start time   10/31/2025 18:18:19  
     End time     10/31/2025 18:18:20  
     Elapsed time       1 second  for    5313 cycles using     2 MPP procs
                 (      0 hour   0 minute   1 second )

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:20
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:18:23  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : 17e959e89272                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: 17e959e89272-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29610

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:18:31

                                                                   10/31/25 18:18:31
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:18:32

     Performing Decomposition -- Phase 1                           10/31/25 18:18:32

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:18:32
     Performing Decomposition -- Phase 3                           10/31/25 18:18:32

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     4.712E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:18:32
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
     cpu time per zone cycle............       197 nanoseconds
     average cpu time per zone cycle....       801 nanoseconds
     average clock time per zone cycle..       905 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1882 t 7.1982E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:32
        1987 t 7.5997E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:32
        2091 t 7.9971E-05 dt 3.81E-08 write d3plot file            10/31/25 18:18:32
        2196 t 8.3966E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:32
        2302 t 8.7987E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:32
        2407 t 9.1968E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:32
        2513 t 9.5984E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:32
        2619 t 9.9996E-05 dt 3.78E-08 write d3plot file            10/31/25 18:18:32
        2724 t 1.0396E-04 dt 3.77E-08 write d3plot file            10/31/25 18:18:32
        2831 t 1.0800E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:32
        2937 t 1.1198E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:32
        3044 t 1.1598E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:32
        3151 t 1.1998E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:32
        3258 t 1.2397E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:32
        3366 t 1.2800E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:33
        3473 t 1.3199E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:33
        3580 t 1.3598E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:33
        3687 t 1.3997E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:33
        3794 t 1.4396E-04 dt 3.73E-08 write d3plot file            10/31/25 18:18:33
        3902 t 1.4800E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4009 t 1.5200E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4115 t 1.5596E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4222 t 1.5997E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4329 t 1.6397E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4436 t 1.6797E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4543 t 1.7197E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4650 t 1.7597E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4757 t 1.7997E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4864 t 1.8397E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        4971 t 1.8797E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        5000 t 1.8906E-04 dt 3.74E-08 flush i/o buffers            10/31/25 18:18:33
        5078 t 1.9197E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        5185 t 1.9597E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
        5292 t 1.9998E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33
 
     *** termination time reached ***
        5292 t 2.0001E-04 dt 3.74E-08 write d3dump01 file          10/31/25 18:18:33
        5292 t 2.0001E-04 dt 3.74E-08 flush i/o buffers            10/31/25 18:18:33
        5292 t 2.0001E-04 dt 3.74E-08 write d3plot file            10/31/25 18:18:33

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:33

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1292K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.3341E-02    0.22     1.3370E-02    0.13
        KW Reading ......... 2.9472E-03    0.05     2.9475E-03    0.03
        KW Writing ......... 8.8505E-04    0.01     8.8550E-04    0.01
      MPP Decomposition .... 1.9703E-02    0.33     2.0541E-02    0.20
        Init Proc .......... 1.0662E-02    0.18     1.1192E-02    0.11
        Decomposition ...... 1.8768E-03    0.03     1.8820E-03    0.02
        Translation ........ 7.1369E-03    0.12     7.4380E-03    0.07
      Initialization ....... 4.3977E+00   73.64     8.7135E+00   84.67
        Init Proc Phase 1 .. 7.1286E-03    0.12     7.5685E-03    0.07
        Init Proc Phase 2 .. 2.2426E-03    0.04     2.8395E-03    0.03
      Init solver .......... 3.3087E-04    0.01     3.3150E-04    0.00
      Element processing ... 4.6076E-01    7.72     4.6055E-01    4.48
        Solids ............. 3.2042E-01    5.37     3.1936E-01    3.10
        Shells ............. 8.2807E-02    1.39     8.2696E-02    0.80
        E Other ............ 1.6344E-02    0.27     1.6390E-02    0.16
      Binary databases ..... 6.9425E-02    1.16     6.9628E-02    0.68
      ASCII database ....... 4.5041E-01    7.54     4.4965E-01    4.37
      Contact algorithm .... 2.1584E-01    3.61     2.1580E-01    2.10
        Interf. ID         1 1.5831E-01    2.65     1.5799E-01    1.54
      Rigid Bodies ......... 8.9866E-03    0.15     8.8555E-03    0.09
      Time step size ....... 3.2468E-02    0.54     3.2343E-02    0.31
      Group force file ..... 4.7110E-03    0.08     5.0975E-03    0.05
      Others ............... 5.2283E-02    0.88     5.2324E-02    0.51
        Force Sharing ...... 3.0348E-02    0.51     3.0211E-02    0.29
      Misc. 1 .............. 1.4138E-01    2.37     1.4433E-01    1.40
        Scale Masses ....... 3.9425E-03    0.07     4.0205E-03    0.04
        Force Constraints .. 4.0296E-03    0.07     4.0330E-03    0.04
        Force to Accel ..... 1.1628E-02    0.19     1.1538E-02    0.11
        Constraint Sharing . 4.3851E-03    0.07     4.4540E-03    0.04
        Update RB nodes .... 4.5054E-03    0.08     4.5885E-03    0.04
      Misc. 2 .............. 2.8257E-02    0.47     2.7847E-02    0.27
      Misc. 3 .............. 5.1342E-02    0.86     5.1959E-02    0.50
      Misc. 4 .............. 2.5054E-02    0.42     2.5289E-02    0.25
        Timestep Init ...... 7.5803E-03    0.13     7.4920E-03    0.07
        Apply Loads ........ 8.9377E-03    0.15     8.8845E-03    0.09
      ----------------------------------------------------------------
      T o t a l s            5.9720E+00  100.00     1.0291E+01  100.00

     Problem time       =    2.0001E-04
     Problem cycle      =      5292
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1080.663 nanoseconds
     Clock time per zone cycle=        284.925 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   17e959e89272                              0.27880   1.6700E+00
      #       1   17e959e89272                              1.72120   1.0310E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.1980E+01


     Start time   10/31/2025 18:18:31  
     End time     10/31/2025 18:18:33  
     Elapsed time       2 seconds for    5292 cycles using     2 MPP procs
                 (      0 hour   0 minute   2 seconds)

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:33
     License option : check ansys licenses only


     ***************************************************************
     *            ANSYS LEGAL NOTICES                              *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2023 ANSYS, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of ANSYS, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the ANSYS, Inc. online documentation or the ANSYS, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * ANSYS, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * ANSYS, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the ANSYS, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the ANSYS, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

          Date: 10/31/2025      Time: 18:18:36  
          ___________________________________________________ 
         |                                                   |
         |  LS-DYNA, A Program for Nonlinear Dynamic         |
         |  Analysis of Structures in Three Dimensions       |
         |  Date    : 10/16/2023    Time: 19:29:09           |
         |  Version : mpp s R14                              |
         |  Revision: R14.1-205-geb5348f751                  |
         |  AnLicVer: 2024 R1 (20231025+2752148)             |
         |                                                   |
         |  Features enabled in this version:                |
         |    Distributed Memory Parallel                    |
         |    FFTW (multi-dimensional FFTW Library)          |
         |    ANSYSLIC enabled                               |
         |                                                   |
         |  Platform   : Intel-MPI 2018 Xeon64               |
         |  OS Level   : Linux CentOS 7.9 uum                |
         |  Compiler   : Intel Fortran Compiler 19.0 SSE2    |
         |  Hostname   : fd9be7e818d3                        |
         |  Precision  : Single precision (I4R4)             |
         |                                                   |
         |  Unauthorized use infringes Ansys Inc. copyrights |
         |___________________________________________________|

    [license/info] Successfully checked out 2 of "dyna_solver_core".
    [license/info] --> Checkout ID: fd9be7e818d3-root-23-000004 (days left: 343)
    [license/info] --> Customer ID: 0
    [license/info] Successfully started "LSDYNA (Core-based License)".

     Executing with ANSYS license

     Command line options: i=input.k 
                           memory=2m

     Input file: input.k                                                                         

     The native file format       : 32-bit small endian
     Memory size from command line:     2000000,            0
     Memory size from command line:     2000000,      2000000

     Memory for the head node
     Memory installed (MB)        :        32098
     Memory available (MB)        :        29605

     on UNIX computers note the following change:

     ctrl-c interrupts ls-dyna and prompts for a sense  switch.
     type the desired sense switch: sw1., sw2., etc. to continue
     the execution.  ls-dyna will respond as explained in the users manual

        type                      response
       -----   ------------------------------------------------------------
       quit    ls-dyna terminates.
       stop    ls-dyna terminates.
       sw1.    a restart file is written and ls-dyna terminates.
       sw2.    ls-dyna responds with time and cycle numbers.    
       sw3.    a restart file is written and ls-dyna continues calculations.
       sw4.    a plot state is written and ls-dyna continues calculations.
       sw5.    ls-dyna enters interactive graphics phase.
       swa.    ls-dyna flushes all output i/o buffers.
       swb.    a dynain is written and ls-dyna continues calculations.
       swc.    a restart and dynain are written and ls-dyna continues calculations.
       swd.    a restart and dynain are written and ls-dyna terminates.
       swe.    stop dynamic relaxation just as though convergence
       endtime=time change the termination time
       lpri    toggle implicit lin. alg. solver output on/off.
       nlpr    toggle implicit nonlinear solver output on/off.
       iter    toggle implicit output to d3iter database on/off.
       prof    output timing data to prof.out and continue.
       conv    force implicit nonlinear convergence for current time step.
       ttrm    terminate implicit time step, reduce time step, retry time step.
       rtrm    terminate implicit at end of current time step.


     ********  notice  ********  notice  ********  notice  ********
     *                                                            *
     * This is the LS-DYNA Finite Element code.                   *
     *                                                            *
     * Neither LST nor the authors assume any responsibility for  *
     * the validity, accuracy, or applicability of any results    *
     * obtained from this system. Users must verify their own     *
     * results.                                                   *
     *                                                            *
     * LST endeavors to make the LS-DYNA code as complete,        *
     * accurate and easy to use as possible.                      *
     * Suggestions and comments are welcomed.  Please report any  *
     * errors encountered in either the documentation or results  *
     * immediately to LST through your site focus.                *
     *                                                            *
     * Copyright (C) 1990-2021                                    *
     * by Livermore Software Technology, LLC                      *
     * All rights reserved                                        *
     *                                                            *
     ********  notice  ********  notice  ********  notice  ********

     Beginning of keyword reader                                   10/31/25 18:18:44

                                                                   10/31/25 18:18:44
     Open include file: bar_impact_mesh.k
  

     Memory required to process keyword     :     320290  
     Additional dynamic memory required     :     362814  


     MPP execution with       2 procs

     Initial reading of file                                       10/31/25 18:18:45

     Performing Decomposition -- Phase 1                           10/31/25 18:18:45

     Performing Recursive Coordinate Bisection (RCB)

     Memory required for decomposition      :      20096  
     Additional dynamic memory required     :     365185  


     Performing Decomposition -- Phase 2                           10/31/25 18:18:45
     Performing Decomposition -- Phase 3                           10/31/25 18:18:45

     input of data is completed

     initial kinetic energy = 0.11118394E+04

     The LS-DYNA time step size should not exceed     4.998E-08
     to avoid contact instabilities.  If the step size is
     bigger then scale the penalty of the offending surface.

     The following binary output files are being created,
     and contain data equivalent to the indicated ascii output files
       binout0000: (on processor       0)
        glstat                                  
        matsum                                  
       binout0001: (on processor       1)
        nodout                                  

     Memory required to begin solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1254K on processor     0
              Maximum   1263K on processor     1
              Average   1259K

     Total allocated memory
              Minimum   1264K on processor     0
              Maximum   1271K on processor     1
              Average   1267K

     initialization completed
     Initial penetration for SI          1   0.00000 (tol=   0.00186)
           1 t 0.0000E+00 dt 3.83E-08 flush i/o buffers            10/31/25 18:18:45
           1 t 0.0000E+00 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
     cpu time per zone cycle............       174 nanoseconds
     average cpu time per zone cycle....       817 nanoseconds
     average clock time per zone cycle..       903 nanoseconds

     estimated total cpu time          =         4 sec (       0 hrs  0 mins)
     estimated cpu time to complete    =         4 sec (       0 hrs  0 mins)
     estimated total clock time        =        12 sec (       0 hrs  0 mins)
     estimated clock time to complete  =         4 sec (       0 hrs  0 mins)
     termination time                  = 2.000E-04
         105 t 3.9799E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         210 t 7.9980E-06 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         314 t 1.1978E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         419 t 1.5996E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         523 t 1.9976E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         628 t 2.3994E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         732 t 2.7974E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         837 t 3.1992E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
         941 t 3.5972E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1046 t 3.9990E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1150 t 4.3970E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1255 t 4.7988E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1359 t 5.1968E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1464 t 5.5986E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1568 t 5.9966E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1673 t 6.3984E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1777 t 6.7964E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1882 t 7.1982E-05 dt 3.83E-08 write d3plot file            10/31/25 18:18:45
        1987 t 7.5998E-05 dt 3.82E-08 write d3plot file            10/31/25 18:18:45
        2091 t 7.9971E-05 dt 3.81E-08 write d3plot file            10/31/25 18:18:45
        2197 t 8.3999E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:45
        2302 t 8.7983E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:45
        2407 t 9.1963E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:45
        2513 t 9.5976E-05 dt 3.79E-08 write d3plot file            10/31/25 18:18:45
        2619 t 9.9987E-05 dt 3.78E-08 write d3plot file            10/31/25 18:18:45
        2725 t 1.0399E-04 dt 3.78E-08 write d3plot file            10/31/25 18:18:45
        2831 t 1.0799E-04 dt 3.77E-08 write d3plot file            10/31/25 18:18:45
        2937 t 1.1198E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:45
        3043 t 1.1597E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:45
        3150 t 1.1999E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:45
        3256 t 1.2396E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:45
        3363 t 1.2798E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:45
        3470 t 1.3199E-04 dt 3.75E-08 write d3plot file            10/31/25 18:18:46
        3576 t 1.3597E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        3683 t 1.3999E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        3789 t 1.4398E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        3895 t 1.4797E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4002 t 1.5199E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4108 t 1.5598E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4214 t 1.5997E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4321 t 1.6400E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4427 t 1.6799E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4533 t 1.7198E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4639 t 1.7597E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4746 t 1.7999E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4852 t 1.8398E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        4958 t 1.8797E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        5000 t 1.8955E-04 dt 3.76E-08 flush i/o buffers            10/31/25 18:18:46
        5065 t 1.9200E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        5171 t 1.9598E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
        5277 t 1.9997E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46
 
     *** termination time reached ***
        5277 t 2.0001E-04 dt 3.76E-08 write d3dump01 file          10/31/25 18:18:46
        5277 t 2.0001E-04 dt 3.76E-08 flush i/o buffers            10/31/25 18:18:46
        5277 t 2.0001E-04 dt 3.76E-08 write d3plot file            10/31/25 18:18:46

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:46

     Memory required to complete solution (memory=    321K memory2=    9385)
              Minimum    7424 on processor     1
              Maximum    9385 on processor     0
              Average    8404

     Additional dynamically allocated memory
              Minimum   1263K on processor     0
              Maximum   1284K on processor     1
              Average   1274K

     Total allocated memory
              Minimum   1272K on processor     0
              Maximum   1292K on processor     1
              Average   1282K

     T i m i n g   i n f o r m a t i o n
                            CPU(seconds)   %CPU  Clock(seconds) %Clock
      ----------------------------------------------------------------
      Keyword Processing ... 1.4231E-02    0.24     1.4259E-02    0.14
        KW Reading ......... 3.2344E-03    0.05     3.2345E-03    0.03
        KW Writing ......... 8.7192E-04    0.01     8.7200E-04    0.01
      MPP Decomposition .... 1.9967E-02    0.33     2.0806E-02    0.20
        Init Proc .......... 1.0568E-02    0.18     1.1067E-02    0.11
        Decomposition ...... 1.8484E-03    0.03     1.8505E-03    0.02
        Translation ........ 7.5218E-03    0.13     7.8585E-03    0.08
      Initialization ....... 4.4460E+00   74.18     8.8118E+00   85.03
        Init Proc Phase 1 .. 7.1362E-03    0.12     7.5285E-03    0.07
        Init Proc Phase 2 .. 2.1262E-03    0.04     2.7820E-03    0.03
      Init solver .......... 2.8781E-04    0.00     2.8900E-04    0.00
      Element processing ... 4.5706E-01    7.63     4.5687E-01    4.41
        Solids ............. 3.1775E-01    5.30     3.1678E-01    3.06
        Shells ............. 8.2754E-02    1.38     8.2750E-02    0.80
        E Other ............ 1.5953E-02    0.27     1.6050E-02    0.15
      Binary databases ..... 6.8755E-02    1.15     6.8980E-02    0.67
      ASCII database ....... 4.4137E-01    7.36     4.4047E-01    4.25
      Contact algorithm .... 2.1124E-01    3.52     2.1124E-01    2.04
        Interf. ID         1 1.5351E-01    2.56     1.5331E-01    1.48
      Rigid Bodies ......... 8.8606E-03    0.15     8.8450E-03    0.09
      Time step size ....... 3.0190E-02    0.50     3.0044E-02    0.29
      Group force file ..... 4.6175E-03    0.08     4.9865E-03    0.05
      Others ............... 5.0982E-02    0.85     5.1052E-02    0.49
        Force Sharing ...... 2.9361E-02    0.49     2.9238E-02    0.28
      Misc. 1 .............. 1.3953E-01    2.33     1.4235E-01    1.37
        Scale Masses ....... 3.9308E-03    0.07     3.9905E-03    0.04
        Force Constraints .. 4.0052E-03    0.07     4.0110E-03    0.04
        Force to Accel ..... 1.1539E-02    0.19     1.1499E-02    0.11
        Constraint Sharing . 4.2875E-03    0.07     4.3865E-03    0.04
        Update RB nodes .... 4.3708E-03    0.07     4.3710E-03    0.04
      Misc. 2 .............. 2.7924E-02    0.47     2.7493E-02    0.27
      Misc. 3 .............. 4.7959E-02    0.80     4.8906E-02    0.47
      Misc. 4 .............. 2.4488E-02    0.41     2.4673E-02    0.24
        Timestep Init ...... 7.4251E-03    0.12     7.3710E-03    0.07
        Apply Loads ........ 8.6250E-03    0.14     8.5630E-03    0.08
      ----------------------------------------------------------------
      T o t a l s            5.9935E+00  100.00     1.0363E+01  100.00

     Problem time       =    2.0001E-04
     Problem cycle      =      5277
     Total CPU time     =         6 seconds (   0 hours  0 minutes  6 seconds)
     CPU time per zone cycle  =       1087.798 nanoseconds
     Clock time per zone cycle=        280.589 nanoseconds

     Parallel execution with      2 MPP proc
     NLQ used/max               120/   120

      C P U   T i m i n g   i n f o r m a t i o n

      Processor   Hostname                              CPU/Avg_CPU  CPU(seconds)
      ---------------------------------------------------------------------------
      #       0   fd9be7e818d3                              0.27454   1.6500E+00
      #       1   fd9be7e818d3                              1.72546   1.0370E+01
      ---------------------------------------------------------------------------
      T o t a l s                                                     1.2020E+01


     Start time   10/31/2025 18:18:44  
     End time     10/31/2025 18:18:46  
     Elapsed time       2 seconds for    5277 cycles using     2 MPP procs
                 (      0 hour   0 minute   2 seconds)

     N o r m a l    t e r m i n a t i o n                          10/31/25 18:18:46
    Target displacement reached at thickness 0.4500




.. GENERATED FROM PYTHON SOURCE LINES 371-374

Generate graphical output
~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 374-389

.. code-block:: Python


    # Now plot all results
    plt.figure(figsize=(8, 5))
    for res in all_results:
        thickness = res["thickness"]
        time_data = res["time"]
        max_disp_data = res["max_disp"]
        color = "r" if max(max_disp_data) <= target_displacement else "b"
        label = f"Thickness {thickness:.4f}"
        plt.plot(time_data, max_disp_data, color=color, label=label)
    plt.xlabel("Time (ms)")
    plt.ylabel("Displacement (mm)")
    plt.title("Plate Displacement vs Time for Different Thicknesses")
    plt.grid(True)
    plt.show()



.. image-sg:: /examples/Optimization/images/sphx_glr_Plate_Thickness_Optimization_001.png
   :alt: Plate Displacement vs Time for Different Thicknesses
   :srcset: /examples/Optimization/images/sphx_glr_Plate_Thickness_Optimization_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 44.327 seconds)


.. _sphx_glr_download_examples_Optimization_Plate_Thickness_Optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Plate_Thickness_Optimization.ipynb <Plate_Thickness_Optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Plate_Thickness_Optimization.py <Plate_Thickness_Optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: Plate_Thickness_Optimization.zip <Plate_Thickness_Optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
