ansys.dyna.core.lib.keyword_base
================================

.. py:module:: ansys.dyna.core.lib.keyword_base


Classes
-------

.. autoapisummary::

   ansys.dyna.core.lib.keyword_base.KeywordBase


Module Contents
---------------

.. py:class:: KeywordBase(**kwargs)

   Bases: :py:obj:`ansys.dyna.core.lib.cards.Cards`


   
   Base class for all keywords.

   Derived class must provide::
       - _cards
       - keyword
       - subkeyword















   ..
       !! processed by numpydoc !!

   .. py:property:: user_comment
      :type: str


      
      Get or set the "user comment" for this keyword.
















      ..
          !! processed by numpydoc !!


   .. py:property:: deck
      :type: Optional[ansys.dyna.core.lib.deck.Deck]


      
      Get the deck that this keyword is associated to.
















      ..
          !! processed by numpydoc !!


   .. py:property:: format
      :type: ansys.dyna.core.lib.format_type.format_type


      
      Get or set the format for this keyword.
















      ..
          !! processed by numpydoc !!


   .. py:method:: get_title(format_symbol: str = '') -> str

      
      Get the title of this keyword.
















      ..
          !! processed by numpydoc !!


   .. py:property:: cards
      :type: List[ansys.dyna.core.lib.card_interface.CardInterface]


      
      Gets the cards of the keyword
















      ..
          !! processed by numpydoc !!


   .. py:property:: included_from
      :type: str


      
      Get the filename this was included from.

      If the keyword was not read from a file,
      return None.















      ..
          !! processed by numpydoc !!


   .. py:method:: __repr__() -> str

      
      Returns a console-friendly representation of the keyword data as it would appear in the .k file
















      ..
          !! processed by numpydoc !!


   .. py:method:: write(buf: Optional[TextIO] = None, format: Optional[ansys.dyna.core.lib.format_type.format_type] = None, deck_format: ansys.dyna.core.lib.format_type.format_type = format_type.default) -> str

      
      Renders the keyword in the dyna keyword format.


      :Parameters:

          **buf: IO**
              Optional - buffer to write to.

          **Returns**
              ..

          **_______**
              ..

          **If `buf` is None, the output is returned as a string**
              ..














      ..
          !! processed by numpydoc !!


   .. py:method:: dumps() -> str

      
      Return the string representation of the keyword.
















      ..
          !! processed by numpydoc !!


   .. py:method:: before_read(buf: TextIO) -> None


   .. py:method:: read(buf: TextIO, parameters: ansys.dyna.core.lib.parameters.ParameterSet = None) -> None


   .. py:method:: loads(value: str, parameters: ansys.dyna.core.lib.parameters.ParameterSet = None) -> Any

      
      Load the keyword from string.

      Return `self` to support chaining















      ..
          !! processed by numpydoc !!


