
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/NVH/frf_plate_damping.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_NVH_frf_plate_damping.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_NVH_frf_plate_damping.py:


FRF for a rectangular plate
===========================

This example shows how to set up the keywords for computation of a FRF (frequency response function).
The executable file for LS-DYNA is ``ls-dyna_smp_d_R13.1_138-g8429c8a10f_winx64_ifort190.exe``.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Peform required imports.


.. GENERATED FROM PYTHON SOURCE LINES 14-32

.. code-block:: default

    import os
    import sys


    from ansys.dyna.core.pre.dynasolution import DynaSolution
    from ansys.dyna.core.pre.dynamaterial import MatElastic
    from ansys.dyna.core.pre.dynanvh import (
        DynaNVH,
        FrequencyDomain,
        ExcitationDOF,
        Curve,
        NodeSet,
        ShellPart,
        ShellFormulation,
        ResponseDOF,
        ResponseType,
    )
    from ansys.dyna.core.pre import examples







.. GENERATED FROM PYTHON SOURCE LINES 34-45

Manually start the ``pre`` service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Copy the ``pyDyna/src/ansys/dyna/core/pre/Server``folder to a desired location.
Start the ``pre`` service at this location by running this command:

``python kwserver.py``

Once the ``pre`` servic is running, you can connect a client to it using
the hostname and the port. This example uses the default local host and port
(``"localhost"`` and ``"50051"`` respectively).


.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: default

    hostname = "localhost"
    if len(sys.argv) > 1:
        hostname = sys.argv[1]
    solution = DynaSolution(hostname)







.. GENERATED FROM PYTHON SOURCE LINES 50-55

Import the initial mesh data (nodes and elements)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import mesh data, which includes the predefined *NODE*, *ELEMENT_* and *PART*
cards.


.. GENERATED FROM PYTHON SOURCE LINES 55-60

.. code-block:: default

    fns = []
    path = examples.nvh_frf_plate_damping + os.sep
    fns.append(path + "frf_plate_damping.k")
    solution.open_files(fns)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ret: true




.. GENERATED FROM PYTHON SOURCE LINES 61-64

Define global control cards
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define the global control cards.

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: default


    nvhobj = DynaNVH()
    solution.add(nvhobj)







.. GENERATED FROM PYTHON SOURCE LINES 68-72

Set initial timestep size
~~~~~~~~~~~~~~~~~~~~~~~~~
Set the initial timestep size in CONTROL_IMPLICIT_GENERAL.


.. GENERATED FROM PYTHON SOURCE LINES 72-74

.. code-block:: default

    nvhobj.implicitanalysis.set_initial_timestep_size(1.0)








.. GENERATED FROM PYTHON SOURCE LINES 75-79

Set number of eigen modes
~~~~~~~~~~~~~~~~~~~~~~~~~
Set the number of eigen modes to ``100``.


.. GENERATED FROM PYTHON SOURCE LINES 79-81

.. code-block:: default

    nvhobj.implicitanalysis.set_eigenvalue(number_eigenvalues=100)








.. GENERATED FROM PYTHON SOURCE LINES 82-85

Define linear solver
~~~~~~~~~~~~~~~~~~~~
Define the linear solver by setting NSOLVR to ``1`` in CONTROL_IMPLICIT_SOLUTION.

.. GENERATED FROM PYTHON SOURCE LINES 85-87

.. code-block:: default

    nvhobj.implicitanalysis.set_solution(solution_method=1)








.. GENERATED FROM PYTHON SOURCE LINES 88-94

Define frequency domain cards
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*FREQUENCY_DOMAIN_FRF* is used to compute the frequency response function due to
nodal excitations. In this case, a base velocity is define as an input at node 131.
The base acceleration response is measured at nodes 131 and 651. The maximum
natural frequency employed in FRF is limited to 2000 Hz.

.. GENERATED FROM PYTHON SOURCE LINES 94-114

.. code-block:: default

    fd = FrequencyDomain()
    crv = Curve(
        x=[1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 200],
        y=[0, 0, 0.0045, 0.00713, 0.00386, 0.00328, 0.0034, 0.00624, 7.2e-4, 8.3e-4, 0, 0],
    )
    fd.set_frequency_response_function(
        excitation_input_set=NodeSet([131]),
        excitation_input_dof=ExcitationDOF.Z,
        max_natural_frequency=2000,
        modal_damping_coefficient_curve_type=1,
        modal_damping_coefficient_curve=crv,
        response_output_set=NodeSet([131, 651]),
        response_output_dof=ResponseDOF.Z,
        response_output_type=ResponseType.BASE_ACCELERATION,
        frf_output_min_frequency=1,
        frf_output_max_frequency=400,
        frf_output_num_frequency=400,
    )
    nvhobj.add(fd)








.. GENERATED FROM PYTHON SOURCE LINES 115-119

Define material and section properties
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define the ``MAT_ELASTIC`` material. Set shell formulation to ``SR_HUGHES_LIU.


.. GENERATED FROM PYTHON SOURCE LINES 119-127

.. code-block:: default

    matelastic = MatElastic(mass_density=7870, young_modulus=2.07e11, poisson_ratio=0.292)

    boxshell = ShellPart(1)
    boxshell.set_material(matelastic)
    boxshell.set_element_formulation(ShellFormulation.SR_HUGHES_LIU)
    boxshell.set_thickness(0.002)
    boxshell.set_shear_factor(0.833)








.. GENERATED FROM PYTHON SOURCE LINES 128-133

Set printout property and save input deck 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use the ``set_printout()`` method to set the printout property to ``3``.
Save the input deck.


.. GENERATED FROM PYTHON SOURCE LINES 133-137

.. code-block:: default

    boxshell.set_printout(3)
    nvhobj.parts.add(boxshell)

    solution.save_file()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    '/server/output'




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.048 seconds)


.. _sphx_glr_download_examples_NVH_frf_plate_damping.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: frf_plate_damping.py <frf_plate_damping.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: frf_plate_damping.ipynb <frf_plate_damping.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
