ansys.dyna.core.pre.dynasale.StructuredMesh
===========================================

.. py:class:: ansys.dyna.core.pre.dynasale.StructuredMesh(control_points_x, control_points_y, control_points_z)

   Bases: :py:obj:`ansys.dyna.core.pre.dynabase.BaseObj`


   
   Generates a structured 2D or 3D mesh and invokes the S-ALE solver.
















   ..
       !! processed by numpydoc !!

   .. py:attribute:: stub


   .. py:attribute:: control_points_x


   .. py:attribute:: control_points_y


   .. py:attribute:: control_points_z


   .. py:attribute:: refine_factor_x
      :value: 1



   .. py:attribute:: refine_factor_y
      :value: 1



   .. py:attribute:: refine_factor_z
      :value: 1



   .. py:attribute:: fillings
      :value: []



   .. py:attribute:: type
      :value: 'structured_mesh'



   .. py:method:: fill(material, geometry_type='NULL', nsample=4, define_geometry_parameters=[0, 0, 0, 0, 0], inout=FillDirection.INSIDE_THE_GEOMETRY, vid=0, reference_pressure=0)

      
      Perform volume-filling operations on a S-ALE mesh.


      :Parameters:

          **material_name** : :class:`python:str`
              Material name.

          **geometry_type** : :class:`python:str`
              Geometry type. The default is ``"Null"``. Options are:
              
              - BOXCOR
              - BOXCPT
              - CYLINDER
              - PARTSET
              - PART
              - PLANE
              - SEGSET
              - SPHERE

          **nsample** : :class:`python:int`, :obj:`optional`
              Number of sampling points. The default is ``4``.

          **define_geometry_parameters** : :class:`python:list`
              List of values having different definitions for different options.
              The default is ``[0, 0, 0, 0, 0]``.

          **in_out** : :class:`python:int`, :obj:`optional`
              Flag for whether to fill inside or outside of the geometry. The
              default is ``INSIDE_THE_GEOMETRY``.

          **vid** : :class:`python:int`, :obj:`optional`
              Flag for assigning the initial velocity to the material filling the domain.
              The default is ``0``.

          **reference_pressure**
              ..



      :Returns:

          :ref:`bool <python:bltin-boolean-values>`
              ``True`` when successful, ``False`` when failed.











      ..
          !! processed by numpydoc !!


   .. py:method:: refine(refine_factor_x=1, refine_factor_y=1, refine_factor_z=1)

      
      Refine existing S-ALE meshes.


      :Parameters:

          **refine_factor_x** : :class:`python:int`, :obj:`optional`
              Refinement factor for the x-direction. The default is ``1``.

          **refine_factor_y** : :class:`python:int`, :obj:`optional`
              Refinement factor for the y-direction. The default is ``1``.

          **refine_factor_z** : :class:`python:int`, :obj:`optional`
              Refinement factor for the z-direction. The default is ``1``.














      ..
          !! processed by numpydoc !!


   .. py:method:: initial_detonation(detonation_point)

      
      Define a point for initiating the location of a high-explosive detonation.


      :Parameters:

          **detonation_point** : :obj:`Point`
              Coordinates (x,y,z) of the detonation point.














      ..
          !! processed by numpydoc !!


   .. py:method:: create()

      
      Create a mesh.
















      ..
          !! processed by numpydoc !!

