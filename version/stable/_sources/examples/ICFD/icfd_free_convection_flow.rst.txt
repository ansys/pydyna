
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/ICFD/icfd_free_convection_flow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_ICFD_icfd_free_convection_flow.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ICFD_icfd_free_convection_flow.py:


Free convection flow
====================

This example shows a simple ICFD forced-convection input deck with a coarse mesh.
The executable file for LS-DYNA is `` ls-dyna_smp_d_R13.1_138-g8429c8a10f_winx64_ifort190.exe``.

.. GENERATED FROM PYTHON SOURCE LINES 30-115




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    '/server/output'





|

.. code-block:: Python


    import os
    import sys

    from ansys.dyna.core.pre import examples, launch_dynapre
    from ansys.dyna.core.pre.dynaicfd import (
        Curve,
        DynaICFD,
        Gravity,
        GravityOption,
        ICFDAnalysis,
        ICFDPart,
        ICFDVolumePart,
        MatICFD,
        MeshedVolume,
    )
    from ansys.dyna.core.pre.misc import check_valid_ip


    hostname = "localhost"
    if len(sys.argv) > 1 and check_valid_ip(sys.argv[1]):
        hostname = sys.argv[1]

    solution = launch_dynapre(ip=hostname)
    # Import the initial mesh data(nodes and elements)
    fns = []
    path = examples.free_convection_flow + os.sep
    fns.append(path + "free_convection_flow.k")
    solution.open_files(fns)
    solution.set_termination(termination_time=30)
    icfd = DynaICFD()
    solution.add(icfd)

    icfdanalysis = ICFDAnalysis()
    icfdanalysis.set_timestep(0.01)
    icfd.add(icfdanalysis)

    # define model
    mat = MatICFD(
        flow_density=37.799999,
        dynamic_viscosity=1,
        heat_capacity=0.7,
        thermal_conductivity=1.0,
        thermal_expansion_coefficient=1,
    )

    part_inflow = ICFDPart(1)
    part_inflow.set_material(mat)
    part_inflow.set_non_slip()
    part_inflow.set_prescribed_temperature(temperature=Curve(x=[0, 10000], y=[1, 1]))
    icfd.parts.add(part_inflow)

    part_outflow = ICFDPart(2)
    part_outflow.set_material(mat)
    part_outflow.set_non_slip()
    part_outflow.set_prescribed_temperature(temperature=Curve(x=[0, 10000], y=[0, 0]))
    icfd.parts.add(part_outflow)

    part_symmetric = ICFDPart(3)
    part_symmetric.set_material(mat)
    part_symmetric.set_non_slip()
    part_symmetric.compute_temperature()
    icfd.parts.add(part_symmetric)

    part_wall = ICFDPart(4)
    part_wall.set_material(mat)
    part_wall.set_non_slip()
    part_wall.compute_temperature()
    icfd.parts.add(part_wall)

    icfd.set_initial()

    g = Gravity(dir=GravityOption.DIR_Y, load=Curve(x=[0, 10000], y=[1, 1]))
    icfd.add(g)

    partvol = ICFDVolumePart(surfaces=[1, 2, 3, 4])
    partvol.set_material(mat)
    icfd.parts.add(partvol)
    # define the volume space that will be meshed,The boundaries
    # of the volume are the surfaces "spids"
    meshvol = MeshedVolume(surfaces=[1, 2, 3, 4])
    icfd.add(meshvol)

    solution.create_database_binary(dt=1)
    solution.save_file()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.031 seconds)


.. _sphx_glr_download_examples_ICFD_icfd_free_convection_flow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: icfd_free_convection_flow.ipynb <icfd_free_convection_flow.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: icfd_free_convection_flow.py <icfd_free_convection_flow.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: icfd_free_convection_flow.zip <icfd_free_convection_flow.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
