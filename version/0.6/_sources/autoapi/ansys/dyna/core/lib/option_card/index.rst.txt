ansys.dyna.core.lib.option_card
===============================

.. py:module:: ansys.dyna.core.lib.option_card


Classes
-------

.. autoapisummary::

   ansys.dyna.core.lib.option_card.OptionSpec
   ansys.dyna.core.lib.option_card.OptionCardSet
   ansys.dyna.core.lib.option_card.OptionAPI
   ansys.dyna.core.lib.option_card.OptionsAPI


Module Contents
---------------

.. py:class:: OptionSpec

   .. py:attribute:: name
      :type:  str


   .. py:attribute:: card_order
      :type:  int


   .. py:attribute:: title_order
      :type:  int


.. py:class:: OptionCardSet(option_spec: OptionSpec, cards: List[ansys.dyna.core.lib.card_interface.CardInterface], **kwargs)

   Bases: :py:obj:`ansys.dyna.core.lib.card_interface.CardInterface`


   
   Abstract base class for all the implementations of keyword cards.
















   ..
       !! processed by numpydoc !!

   .. py:property:: cards
      :type: List[ansys.dyna.core.lib.card_interface.CardInterface]



   .. py:property:: option_spec
      :type: OptionSpec



   .. py:property:: name
      :type: str



   .. py:property:: title_order
      :type: int



   .. py:property:: card_order
      :type: int



   .. py:property:: active
      :type: bool



   .. py:property:: format
      :type: ansys.dyna.core.lib.format_type.format_type


      
      Get the card format type.
















      ..
          !! processed by numpydoc !!


   .. py:method:: __hash__()


   .. py:method:: __lt__(other: OptionCardSet)


   .. py:method:: read(buf: TextIO) -> bool

      
      Read from buf.
















      ..
          !! processed by numpydoc !!


   .. py:method:: write(format: Optional[ansys.dyna.core.lib.format_type.format_type] = None, buf: Optional[TextIO] = None, comment: Optional[bool] = True) -> Union[str, None]

      
      Renders the card in the dyna keyword format.
      :param buf: Buffer to write to. If None, the output is returned as a string
      :param format: format_type to use. Default to standard.
















      ..
          !! processed by numpydoc !!


.. py:class:: OptionAPI(kw, name)

   
   API for an individual option associated with a keyword.
















   ..
       !! processed by numpydoc !!

   .. py:property:: active
      :type: bool



.. py:class:: OptionsAPI(kw)

   
   API for options associated with a keyword.
















   ..
       !! processed by numpydoc !!

   .. py:method:: __getitem__(name: str) -> OptionAPI

      
      Gets the option with the given name.
















      ..
          !! processed by numpydoc !!


   .. py:method:: __repr__() -> str


   .. py:property:: option_specs
      :type: List[OptionSpec]



